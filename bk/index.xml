<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bks on Hoang</title>
    <link>https://hoangmnsd.github.io/bk/</link>
    <description>Recent content in Bks on Hoang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 21 Oct 2025 22:49:25 +0700</lastBuildDate><atom:link href="https://hoangmnsd.github.io/bk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Troubleshoot SSL certificate in Java apps</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-troubleshoot-ssl-proxy-java-docker/</link>
      <pubDate>Tue, 21 Oct 2025 22:49:25 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-troubleshoot-ssl-proxy-java-docker/</guid>
      <description>Story Quá trình giúp mọi người trong team mình thấy bị lỗi này khá nhiều PKIX path building failed
Phát hiện ra nó thường xuất hiện khi bạn làm việc trong những tổ chức dùng Proxy riêng
Mọi request của bạn đều đi qua proxy và proxy đó dùng 1 SSL cert riêng khiến cho request của bạn ko hợp lệ
Lỗi Jenkins docker Khi dùng File docker-compose.yml:
version: &amp;#39;3.8&amp;#39; services: jenkins: container_name: local_jenkins image: jenkins/jenkins:lts-jdk17 privileged: true user: root ports: - &amp;#34;8080:8080&amp;#34; - &amp;#34;50000:50000&amp;#34; volumes: - jenkins_home:/var/jenkins_home restart: unless-stopped volumes: jenkins_home: Deploy sẽ bị lỗi:</description>
    </item>
    
    <item>
      <title>Azure Data Factory debugging notes</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-datafactory-debug-notes/</link>
      <pubDate>Thu, 02 Oct 2025 22:49:25 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-datafactory-debug-notes/</guid>
      <description>Đối với 1 Azure DataFactory activity web bất kỳ, để lấy được output của nó thì cần phải theo đúng syntax:
 The expression &amp;lsquo;activity(&amp;lsquo;Test activity&amp;rsquo;).Error1&amp;rsquo; cannot be evaluated because property &amp;lsquo;Error1&amp;rsquo; doesn&amp;rsquo;t exist, available properties are &amp;lsquo;PipelineName, PipelineRunId, JobId, ActivityRunId, ExecutionStartTime, ExecutionEndTime, Status, Error, Output, ExecutionDetails, StatusCode, ExecutionStatus, Duration, RecoveryStatus, ActivityType&amp;rsquo;.
 azure-datafactory-error-detail.jpg
 The expression &amp;lsquo;activity(&amp;lsquo;Test activity&amp;rsquo;).output.ADFHttpStatusCodeInResponse1&amp;rsquo; cannot be evaluated because property &amp;lsquo;ADFHttpStatusCodeInResponse1&amp;rsquo; doesn&amp;rsquo;t exist, available properties are &amp;lsquo;Response, ADFHttpStatusCodeInResponse, ADFWebActivityResponseHeaders, effectiveIntegrationRuntime, executionDuration, durationInQueue, billingReference&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>BMAC webhook setup</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-bmac-webhook-setup/</link>
      <pubDate>Fri, 19 Sep 2025 11:04:14 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-bmac-webhook-setup/</guid>
      <description>Setup webhook BMAC Get secret từ Studio BMAC:
Config secret trên Lambda env:
Send test event từ Studio BMAC:
trả về 500 như này là Lỗi:
trả về 200 như này là OK:
Check log trên Cloudwatch:
References https://studio.buymeacoffee.com/webhooks/docs
https://help.buymeacoffee.com/en/articles/8210728-faq-on-webhooks</description>
    </item>
    
    <item>
      <title>Benchmark Redis Rabbitmq Kafka</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-benchmark-redis-rabbitmq-kafka/</link>
      <pubDate>Sun, 14 Sep 2025 11:04:14 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-benchmark-redis-rabbitmq-kafka/</guid>
      <description>Story Gần đây đọc được 1 bài viết khá chi tiết và hay về Benchmark giữa các hệ thống Queue message: RabbitMQ, RedisStream, Kafka: https://devops.vn/posts/bai-test-benchmark-giua-cac-message-queue-kafka-vs-rabbitmq-vs-redis-streams-ket-qua-khien-toi-phai-bat-ngo/
Kết quả của họ thì Redis Stream rất tốt
Mình đã dùng Redis Stream dc vài tháng, thấy cũng vui vì dùng đúng hàng ngon
Nhưng mình cũng muốn tự tay benchmark để xem các Message queue kia như thế nào với Python
Thế nên mình đã test bằng 1 vài Python script đơn giản để so sánh</description>
    </item>
    
    <item>
      <title>Setup MCP Server Client</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-mcp-server-client/</link>
      <pubDate>Thu, 21 Aug 2025 21:50:50 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-mcp-server-client/</guid>
      <description>Source được sử dụng trong bài này: https://gitlab.com/inmessionante/mcp-lab.git
1. Simple start Follow doc này thấy dễ hiểu hơn Docs official: https://danielecer.com/posts/mcp-python-sdk/
# python3.10 source .venv/bin/activate python3.10 -m pip install -r requirements.txt 1.1. Simple streamable-http MCP server Run server:
$ python test-simple-streamable-http/server.py INFO: Started server process [37974] INFO: Waiting for application startup. [08/21/25 11:33:55] INFO StreamableHTTP session manager started streamable_http_manager.py:111 INFO: Application startup complete. INFO: Uvicorn running on http://0.0.0.0:8080 (Press CTRL+C to quit) INFO: 127.</description>
    </item>
    
    <item>
      <title>Remotion studio</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-remotion-studio/</link>
      <pubDate>Sat, 02 Aug 2025 22:49:25 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-remotion-studio/</guid>
      <description>Xuất phát từ 1 dự án Open source ở đây: https://github.com/remotion-dev/template-tiktok
Mình fork về 1 bản để dùng cá nhân: https://gitlab.com/inmessionante/remotion-template-tiktok
Đây là project dùng để tạo caption/subtitle cho video. Theo style Tiktok.
1. Các steps run local 1.1. Install Dependencies cd ./remotion-template-tiktok npm i 1.2. Start Remotion Studio WebUI, rồi mở giao diện để check npm run dev 1.3. Sửa file whisper-config.mjs để xác định ngôn ngữ đầu ra, model sử dụng ví dụ mình sẽ cần xuất ra ngôn ngữ vi</description>
    </item>
    
    <item>
      <title>Setup LGTM stack &#43; Open Telemetry</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-lgtm-stack-with-open-telemetry/</link>
      <pubDate>Fri, 01 Aug 2025 21:50:50 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-lgtm-stack-with-open-telemetry/</guid>
      <description>1. Story Gần đây mình quan tâm đến chủ đề Logging Tracing Monitoring
Phát hiện 1 stack công nghệ khá hay dành riêng cho chủ đề trên là LGTM.
Trong project này mình sẽ dùng Docker Compose để build 1 stack LGTM.
Rồi cung cấp sample code để 1 Python application có thể sử dụng LGTM.
Source code: https://gitlab.com/inmessionante/lgtm-lab.git
2. LGTM Stack là gì? Loki + Grafana + Tempo + ProMetheus</description>
    </item>
    
    <item>
      <title>Azure Monitor Alert and Grafana Alert</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-compare-azure-monitor-alert-grafana-alert/</link>
      <pubDate>Mon, 14 Jul 2025 11:04:14 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-compare-azure-monitor-alert-grafana-alert/</guid>
      <description>Bài toán đặt ra App generate log mỗi 1 phút 1 lần với customDimensions.service_name == &amp;ldquo;billing&amp;rdquo;.
Cần tạo Alert query KQL dựa trên customDimensions.service_name là billing.
run evaluation mỗi 1 phút, lấy top 3 lần gần nhất,
Check nếu value của query lớn hơn 11, 3 lần liên tục thì Alert về email.
nếu giữa các lần chạy schedule mà có log do manual run (liên tục trong 1 phút chẳng hạn), thì Alert query sẽ bị sai.</description>
    </item>
    
    <item>
      <title>Facebook Dev Apps Steps</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-facebook-dev-apps-steps/</link>
      <pubDate>Mon, 14 Jul 2025 11:04:14 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-facebook-dev-apps-steps/</guid>
      <description>Usecase  Tạo Chatbot Facebook cho Fan Page, sẽ trả lời dựa trên các thông tin được feed từ đầu, ko trả lời các thông tin không liên quan. dùng RAG chứ ko phải feed hết vào System prompt. dùng VectorstoreDB là Pinecone. dùng AWS Lambda + API Gateway làm hook backend.  Tạo Facebook ChatBot trên Developer Portal Các steps để tạo App trong Facebook Developer portal:
Config webhook ở đây: Configure webhook cho Facebook ChatBot Vì Facebook sẽ gửi GET request đến endpoint trên để check đúng ko nên tiếp theo là</description>
    </item>
    
    <item>
      <title>Azure Administrator</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-certified-administrator/</link>
      <pubDate>Wed, 25 Jun 2025 23:01:48 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-certified-administrator/</guid>
      <description>Đánh giá chung Mình pass 744/700 nhưng cảm giác thi ko hề tự tin sau khi làm xong.
Chắc chỉ có 10-15 câu là chắc chắn. Còn lại phần lớn là chỉ loại trừ được 2 đáp án, còn lại 2 đáp án phải chọn bừa.
May mà cuối cùng vẫn pass sít sao. (Khác hẳn lần thì cert AI Fundamental trước, điểm cao 871/700)
Udemy course: microsoft-certified-azure-administrator PT1  Bạn có 1 VM cần backup lúc 2AM mỗi ngày, backups lưu 30days.</description>
    </item>
    
    <item>
      <title>AWS IAM SSO with Identity Center</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-iam-sso/</link>
      <pubDate>Fri, 28 Mar 2025 21:54:05 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-iam-sso/</guid>
      <description>Bài này playaround với AWS IAM Identity Center, 1 service khá hay được recommend để đảm bảo security.
Mình thấy tính năng quan trọng nhất là có thể set duration timeout(session) cho từng cặp Access Key (ví dụ 1h, 8h)
Enable service:
Add user:
Login với user vừa tạo, dùng link mà step trước có được:
Sẽ cần enable MFA:
Bởi vì chưa đc set Permission nên sẽ ko thấy gì ở Access Portal này:</description>
    </item>
    
    <item>
      <title>AWS Lambda Development with SAM</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-lambda-development-sam/</link>
      <pubDate>Fri, 28 Mar 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-lambda-development-sam/</guid>
      <description>repo: https://gitlab.com/inmessionante/test-lambda-local-develop-lab.git
1. Overview Nói về 2 method để làm việc với AWS Lambda từ môi trường local
 Method 1: Using sam-cli type zip Method 2: Using sam-cli type docker image    Method 1 thường dùng cho các ứng dụng vừa và nhỏ, vì có giới hạn của zip file là 250MB (Kể cả có áp dụng Layer). ưu điểm là khi deploy lên AWS Lambda, bạn có thể vào nhìn và chỉnh sửa trực tiếp luôn bằng Browser IDE luôn.</description>
    </item>
    
    <item>
      <title>Streamlit with authentication via Google</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-streamlit-google-oidc/</link>
      <pubDate>Thu, 20 Mar 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-streamlit-google-oidc/</guid>
      <description>Project link: https://gitlab.com/inmessionante/test-streamlit-docker
About This project demonstrate the Streamlit use case with login page (login by Google)
and interact with Google Sheet Private base on personal user data.
Prepare on GCP 3 ảnh sau để cho bước setup authen bằng Google OIDC:
Tạo file Google Sheet private có data như sau, cột A là unique email của mỗi user:
Enable Google Sheet API service:
Enable Google Drive API service:
Create Service account:</description>
    </item>
    
    <item>
      <title>Increase disk size Ubuntu20 on VirtualBox</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-increase-disk-size-ubuntu20-on-virtualbox/</link>
      <pubDate>Tue, 11 Mar 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-increase-disk-size-ubuntu20-on-virtualbox/</guid>
      <description>Trên 1 VM ubuntu 20.04, cài trên VirtualBox, ban đầu mình chỉ allocate 10GB, nhưng về sau cần nhiều hơn, nên đã dùng Windows Command để resize file vdi thành 20.7GB Dùng command trên Windows Command Line: (source: https://www.howtogeek.com/124622/how-to-enlarge-a-virtual-machines-disk-in-virtualbox-or-vmware/)
VBoxManage modifyhd &amp;quot;C:\Users\USERNAME\VirtualBox VMs\Windows 10\Windows 7.vdi&amp;quot; --resize 21920 hoặc: VBoxManage modifymedium disk &amp;quot;C:\Users\USERNAME\VirtualBox VMs\Windows 10\Windows 10.vdi&amp;quot; --resize 21920 Nhưng sau khi restart, bây giờ vào VM, thì thấy sda disk đúng là 20.</description>
    </item>
    
    <item>
      <title>Azure AI Fundamentals</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-certified-ai-fundamental/</link>
      <pubDate>Thu, 27 Feb 2025 23:01:48 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-certified-ai-fundamental/</guid>
      <description>Vừa mới đi thi cái cert Azure AI Fundamental về, được 871/700 nghĩa là quá đủ để pass. Có lẽ vì là loại Fundamental (chứ ko phải Associate) nên dễ hơn hẳn.
Sau đây là quá trình học của mình:
1 số Lab hữu ích theo docs của MS, (chú ý nếu muốn dùng Language Studio thì phải có account work/school. Account personal ko login dc Language Studio):
Lab về Azure ML Studio (feature Automated ML) (account personal login OK).</description>
    </item>
    
    <item>
      <title>Azure AI Search service</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-ai-search/</link>
      <pubDate>Thu, 27 Feb 2025 23:01:48 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-ai-search/</guid>
      <description>https://microsoftlearning.github.io/mslearn-ai-fundamentals/Instructions/Labs/11-ai-search.html
Lab này sẽ có 3 resoucre cần tạo:
Tạo Azure AI Search:
Tạo Azure AI service để sau này attach vào Search service:
Tạo storage account:
Download file review về https://aka.ms/mslearn-coffee-reviews
Upload lên container của storage account:
Click import data:
Connect đến storage account:
Chọn cái mình đã tạo:
Select theo hướng dẫn:
Tiếp mở tab tiếp theo, có thể sẽ cần tạo container mới trong SA, knowledge-store
Tab Customize target index sửa như sau:</description>
    </item>
    
    <item>
      <title>Azure Foundry Speech service</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-foundry-speech/</link>
      <pubDate>Thu, 20 Feb 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-foundry-speech/</guid>
      <description>Hiện chưa support fine-tune tạo voice hay translate:
Chức năng tạo personal voice from human voice sample, có lẽ chính là voice-clone:</description>
    </item>
    
    <item>
      <title>Azure ContentSafety Studio, Azure Foundry ContentSafety</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-foundry-content-safety-studio/</link>
      <pubDate>Wed, 19 Feb 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-foundry-content-safety-studio/</guid>
      <description>Làm theo Labs này: https://microsoftlearning.github.io/mslearn-ai-fundamentals/Instructions/Labs/02-content-safety.html
Add role &amp;ldquo;Cognitive Services User&amp;rdquo; for user
Xong chỗ này vẫn ko xuất hiện:
Test thử Run simple test ko được vì lỗi bên trên chưa resolved:
Nhưng chuyển sang dùng giao diện mới (Preview) Azure AI Foundry thì có thể run Test được và chọn dc resource:
sample code:</description>
    </item>
    
    <item>
      <title>Azure Language Studio</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-language-studio/</link>
      <pubDate>Tue, 18 Feb 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-language-studio/</guid>
      <description>Làm theo Labs này: https://microsoftlearning.github.io/mslearn-ai-fundamentals/Instructions/Labs/06-text-analysis.html
Để dùng Language Studio, MS bắt buộc phải login bằng work/school account.
Đoạn sau mình thử login bằng account tổ chức, tất nhiên ko có subscription nên sẽ ko dùng được chỉ xem được.
Có thể dùng code nếu ko muốn dùng Language Studio:</description>
    </item>
    
    <item>
      <title>Azure Bot Service experiment</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-bot-service/</link>
      <pubDate>Mon, 17 Feb 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-bot-service/</guid>
      <description>1. Local Development, run Bot locally và test dùng Emulator source sample của Azure: https://github.com/microsoft/BotBuilder-Samples/tree/main/samples/python/02.echo-bot
Download app Emulator cài đặt trên windows
Chạy app trên WSL (có thể sẽ bị lỗi về sau):
chạy trên WSL mình sẽ bị lỗi như này:
Chuyển sang chạy trên Windows python GitBash sẽ ok:
2. Provision Azure Bot Service https://learn.microsoft.com/en-us/azure/bot-service/abs-quickstart?view=azure-bot-service-4.0&amp;amp;wt.mc_id=searchAPI_azureportal_inproduct_rmskilling&amp;amp;sessionId=23113e4166814aa9a96aaf685a50e38b&amp;amp;tabs=userassigned
Tạo 1 App registration từ Entra AD:
Tạo và chọn Plan:
Sau khi tạo:</description>
    </item>
    
    <item>
      <title>RAG with knowledge base</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-rag-with-knowledge-base/</link>
      <pubDate>Mon, 27 Jan 2025 23:01:48 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-rag-with-knowledge-base/</guid>
      <description>Bài này nói về cách để dùng OpenWebUI API với RAG collection knowledge base đã upload từ trước: https://docs.openwebui.com/getting-started/api-endpoints/
Có lẽ sẽ thích hợp cho use-case kiểu tích hợp chatbot để trả lời FAQ cho 1 website
Đầu tiên nên chọn setting 1 model để dùng cho Embedding model:
upload RAG knowledge base lên Openweb UI, upload phải ra được trạng thái như này mới OK:
Khi hỏi thì thêm dấu # để mention các document đang tìm:</description>
    </item>
    
    <item>
      <title>Azure Function App development with CLI</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-function-with-python-cli/</link>
      <pubDate>Mon, 20 Jan 2025 12:52:01 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-function-with-python-cli/</guid>
      <description>Run Azure Function serverless trên WSL Install $ curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &amp;gt; microsoft.gpg $ sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg $ sudo sh -c &amp;#39;echo &amp;#34;deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs 2&amp;gt;/dev/null)-prod $(lsb_release -cs 2&amp;gt;/dev/null) main&amp;#34; &amp;gt; /etc/apt/sources.list.d/dotnetdev.list&amp;#39; $ sudo apt-get update $ sudo apt-get install azure-functions-core-tools-4 $ func --version 4.0.6821 Activate, init and run $ python -m venv .venv $ source .venv/bin/activate (OPTIONAL) $ func init test-az-function-01 --worker-runtime python $ cd .</description>
    </item>
    
    <item>
      <title>Azure Logic Apps and Log Analytics</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-logic-apps-and-log-analytics/</link>
      <pubDate>Mon, 20 Jan 2025 12:52:01 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-logic-apps-and-log-analytics/</guid>
      <description>Story Bài Toán sẽ là mình cần làm 1 LogicApp thực hiện tác vụ DataMapping
khi gửi request đến LogicApp với json body là:
{ &amp;#34;orderId&amp;#34;: &amp;#34;ORD1234&amp;#34;, &amp;#34;orderDate&amp;#34;: &amp;#34;2025-01-01: 12:12:12&amp;#34;, &amp;#34;customerId&amp;#34;: &amp;#34;CUST1234&amp;#34;, &amp;#34;paymentMethod&amp;#34;: &amp;#34;Credit Card&amp;#34; } LogicApp sẽ phải return 1 json được convert thành:
{ &amp;#34;orderNumber&amp;#34;: &amp;#34;ORD1234&amp;#34;, &amp;#34;orderDate&amp;#34;: &amp;#34;2025-01-01: 12:12:12&amp;#34;, &amp;#34;customerNumber&amp;#34;: &amp;#34;CUST1234&amp;#34;, &amp;#34;payment&amp;#34;: { &amp;#34;paymentMethodCode&amp;#34;: &amp;#34;1&amp;#34; } } Create 1 Logic App service Vào Logic app designer để kéo thả flow:</description>
    </item>
    
    <item>
      <title>Using Azure Machine Learning Studio and Azure OpenAI service</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-machine-learning-studio-and-openai/</link>
      <pubDate>Thu, 09 Jan 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-machine-learning-studio-and-openai/</guid>
      <description>Deploy realtime endpoint to Azure Machine Learning Studio Follow this tutorial: https://microsoftlearning.github.io/mslearn-ai-fundamentals/Instructions/Labs/01-machine-learning.html
Cần add Role assignment cho RG:
Solution: https://learn.microsoft.com/en-us/answers/questions/2044338/cant-run-real-time-deployment-for-best-model-in-az
Deploy lại lần nữa:
Deploy success Real-time Endpoint:
Deploy and use Azure OpenAI Chat gặp lỗi:</description>
    </item>
    
    <item>
      <title>Swag renew certificate error</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-swag-renew-cert-error/</link>
      <pubDate>Sat, 04 Jan 2025 21:56:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-swag-renew-cert-error/</guid>
      <description>Story Sau khi backup sang VM mới. mình có mang swag data sang deploy container.
Gần đây phát hiện lỗi ko renew được.
The cert is either expired or it expires within the next day. Attempting to renew. This could take up to 10 minutes. &amp;lt;-------------------------------------------------&amp;gt; &amp;lt;-------------------------------------------------&amp;gt; cronjob running on Thu Oct 17 09:40:23 +07 2024 Running certbot renew Saving debug log to /var/log/letsencrypt/letsencrypt.log - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Processing /etc/letsencrypt/renewal/DOMAINULD.</description>
    </item>
    
    <item>
      <title>Design Pattern notes</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-design-pattern-guru/</link>
      <pubDate>Thu, 02 Jan 2025 22:49:25 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-design-pattern-guru/</guid>
      <description>1. Design Pattern 1.1. Overview 1.1.1. Abstract Factory: Bạn có 1 nhóm các sản phẩm liên quan đến nhau: Chair, Sofa, CoffeeTable. Mỗi loại đều có 3 phong cách: Modern, Victorian, ArtDeco. Bạn ko muốn mix chúng lại vì như thế sai về phong cách (ví dụ: Modern Sofa ko thể đi với Victorian Chair...). Bạn cần phải tạo `Chair` interface, tất cả các phong cách Chair đều phải implements cái `Chair` interface.</description>
    </item>
    
    <item>
      <title>Ship Log to Grafana Loki using Promtail</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-ship-log-to-grafana-loki-use-promtail/</link>
      <pubDate>Thu, 02 Jan 2025 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-ship-log-to-grafana-loki-use-promtail/</guid>
      <description>Story Câu chuyện là mình có 1 app chạy trên AWS Lambda. Hàng ngày throw log ra AWS Cloudwatch Log.
Mình có nhu cầu query log để marketing, thế nên thường xuyên dùng chức năng Log Insight của Cloudwatch.
Tuy nhiên thì giá của Log Insight khá là căng. Họ sẽ free 5GB query đầu tiên, sau đó tính phí:
 First 5GB per month of log data scanned by CloudWatch Logs Insights queries is free.</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 7) - Tunnel</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p7-tunnel/</link>
      <pubDate>Sat, 28 Dec 2024 18:34:01 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p7-tunnel/</guid>
      <description>1. Story Mình đang có 1 app HomeAssistant (HASS) chạy trên RPi ở nhà.
Mình có nhiều device (bóng đèn) đã connect với HASS rồi.
Mình có 1 Alexa speaker để trong nhà.
Mình cần ra lệnh cho Alexa tắt/bật đèn trong nhà.
Khi config Alexa nó sẽ cần integrate với HASS để điều khiển device trong nhà.
Alexa connect với HASS qua internet (ko phải local). Phải là https HASS.</description>
    </item>
    
    <item>
      <title>AWS Budget notification</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-budget-notification/</link>
      <pubDate>Fri, 01 Nov 2024 21:56:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-budget-notification/</guid>
      <description>Story Việc kiểm soát AWS Budget hết sức quan trọng, các bạn chắc hẳn ko muốn bị vượt quá hạn mức AWS Account free tier khi sử dụng.
Bài này là 1 tutorial được làm lại theo bài tutorial có sẵn.
Manual action để create Budget cho AWS account, khi Alert reached, nó sẽ send message đến SNS topic.
1 Lambda function subscribe topic đó sẽ được trigger/invoke và sẽ làm đủ loại action mà bạn mong muốn.</description>
    </item>
    
    <item>
      <title>AI Model for serverless running</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-ai-model-serverless-setup/</link>
      <pubDate>Fri, 09 Aug 2024 21:56:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-ai-model-serverless-setup/</guid>
      <description>Story Nhu cầu sử dụng AI trong công việc ngày càng lớn trong hiện tại và tương lai
Sau 1 thời gian tìm hiểu mình chia 2 hướng để viết bài:
 Hướng dẫn run AI model local. Hướng dẫn run AI model trên serverless platform. (Chính là bài viết này)  Trong bài này mình sẽ lướt qua các platform sau là nơi để run các AI model 1 cách Serverless:</description>
    </item>
    
    <item>
      <title>AWS: Run LLM on SageMaker</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-run-llm-on-sagemaker/</link>
      <pubDate>Fri, 09 Aug 2024 21:56:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-run-llm-on-sagemaker/</guid>
      <description>Overview SageMaker là 1 AWS service cung cấp khả năng quản lý/build/deploy/run các Machine Learning task.
Có 1 vài term mà mình chạm đến:
 Application -&amp;gt; Notebook instance: bạn tạo 1 VM riêng cho việc chạy jupyter code notebook, thích hợp cho việc dùng chung cả team. Admin -&amp;gt; Domain - user trong domain: chắc là để tạo group các user làm việc tập trung theo 1 domain nào đó.</description>
    </item>
    
    <item>
      <title>LLM for local running</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-large-language-model-local-setup-llm/</link>
      <pubDate>Wed, 07 Aug 2024 21:56:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-large-language-model-local-setup-llm/</guid>
      <description>Story Nhu cầu sử dụng AI trong công việc ngày càng lớn trong hiện tại và tương lai
Sau 1 thời gian tìm hiểu mình chia 2 hướng để viết bài:
 Hướng dẫn run AI model local. (Chính là bài viết này) Hướng dẫn run AI model trên serverless platform.  Mình cần test thử để confirm các use-case sau:
 Run trên local PC (Windows có GPU / ko có GPU, Ubuntu nhân arm64 / amd64) Có thể expose to Internet and serve request via API Sử dụng với Coding Assistant Agent (Mentat, Continue, Tabby, Github Copilot&amp;hellip;) Sử dụng Private Documents của cá nhân để input vào AI model, rồi nó sẽ trả lời dựa trên các thông tin đó.</description>
    </item>
    
    <item>
      <title>Setting up AI coding assistant</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-ai-coding-assistant/</link>
      <pubDate>Fri, 26 Jul 2024 21:56:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-ai-coding-assistant/</guid>
      <description>Tương lai công việc của Developer sẽ &amp;ldquo;nhàn&amp;rdquo; đi rất nhiều.. và cũng cạnh tranh hơn rất nhiều với sự xuất hiện của các công cụ AI Coding assistant/agent như thế này&amp;hellip;
Bạn hoàn toàn có thể &amp;ldquo;ra chuồng gà&amp;rdquo; nếu ko xuôi mình theo dòng chảy của thời đại.
1. Mentat (dừng update từ tháng 4/2024) 1.1. Overview Mình được biết đến mentat qua 1 repo nào đó về ChatGPT.</description>
    </item>
    
    <item>
      <title>Azure DNS Zone setup with Namecheap domain</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-dnszone-with-namecheap/</link>
      <pubDate>Fri, 05 Jul 2024 21:50:50 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-dnszone-with-namecheap/</guid>
      <description>Giả sử mình mua 1 domain yourdomain.dev trên Namecheap. Giờ muốn setup nó với Azure DNS Zone để trỏ các service từ Internet vào az.yourdomain.dev sẽ đi đến các Azure resource của mình. Trên AWS cũng có service tương tự là AWS Route53.
  Internet -&amp;gt;　*.az.yourdomain.dev -&amp;gt; Azure DNS Zone -&amp;gt; Azure web app/services/VM
  Internet -&amp;gt;　*.aws.yourdomain.dev -&amp;gt; AWS Route53 -&amp;gt; AWS web app/services/VM
  Setup Azure DNS Zone with Namecheap domain Chú ý: Pricing của mỗi DNS Zone trên Azure là $0.</description>
    </item>
    
    <item>
      <title>Azure AKS with DNS Zone, cert-manager, traefik</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-aks-certmanager-traefik-dnszone/</link>
      <pubDate>Thu, 04 Jul 2024 21:50:50 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-aks-certmanager-traefik-dnszone/</guid>
      <description>1. Diagram Architecture 1 số chú ý:
Traefik hoạt động tương tự là Nginx-ingress-controller. Được recommend.
Enable Azure CNI for AKS: Thường thì 1 hệ thống infra sẽ tồn tại hầm bà lằng các kiểu vừa AKS cluster, vừa VM, vừa container. Khi đó sẽ xuất hiện yêu cầu connect giữa các service đó. Và muốn AKS pod có thể connect đến các VM IP thì bạn cần enable Azure CNI khi tạo AKS cluster (ko thể enable Azure CNI trên 1 AKS cluster đã tồn tại).</description>
    </item>
    
    <item>
      <title>Fast setup ElasticSearch Kafka Cassandra</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-fast-setup-elasticsearch-kafka-cassandra/</link>
      <pubDate>Thu, 04 Jul 2024 21:50:50 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-fast-setup-elasticsearch-kafka-cassandra/</guid>
      <description>Quá trình làm việc có thể bạn sẽ cần dựng môi trường thật nhanh để test các tính năng
Dưới đây là script để setup ElasticSearch, Cassandra, Kafka+Zookeeper nhanh bằng Docker Compose
1. Fast setup 1.1. Install Docker, Docker Compose in Ubuntu 20 sudo apt update sudo apt install apt-transport-https ca-certificates curl software-properties-common -y curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable&amp;#34; sudo apt update apt-cache policy docker-ce sudo apt install docker-ce -y sudo systemctl status docker sudo usermod -aG docker ${USER} exit login again sudo curl -L https://github.</description>
    </item>
    
    <item>
      <title>Setup Azure APIM in front of AKS services</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-apim-in-front-of-aks-services/</link>
      <pubDate>Thu, 04 Jul 2024 21:50:50 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-apim-in-front-of-aks-services/</guid>
      <description>1. Giới thiệu Bài này note lại cách APIM và AKS setup mà mình đã trải qua. (chủ yếu về APIM)
Azure APIM là 1 dịch vụ quản lý API của Azure. Tương tự như AWS API Gateway.
APIM có giá khá cao với nhiều tier khác nhau: https://azure.microsoft.com/en-us/pricing/details/api-management/
2. Sơ qua về AKS Mình setup AKS cluster trong 1 Vnet. (đã enable Azure CNI overlay)
3. Kiến trúc Về kiến trúc nói chung, APIM có thể được đặt trong Vnet (phải có riêng 1 subnet cho APIM) hoặc đặt ngoài Vnet.</description>
    </item>
    
    <item>
      <title>Azure AKS with Helm at 2024</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-aks-with-helm-2024/</link>
      <pubDate>Wed, 19 Jun 2024 21:50:50 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-aks-with-helm-2024/</guid>
      <description>Sau 1 thời gian khá lâu (từ 2020) ko đụng đến k8s và helm, giờ 2024 quay lại để review kiến thức 1 chút
1. Môi trường làm việc Windows WSL Ubuntu 20, hoặc Ubuntu 20 VM, Docker và Docker-compose, az-cli, maven, java 8
2. Create AKS Cluster, ACR Đầu tiên cần tạo 1 AKS cluster, 1 ACR. Mình sẽ ko nói về phần này vì tạo khá dễ.
Có 1 số yêu cầu về AKS, nên ở trong 1 VNET/subnet, có 1 NSG gắn vào subnet đó (để sau này chúng ta kiểm soát traffic ra/vào)</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 6) - Camera</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p6-camera/</link>
      <pubDate>Wed, 06 Mar 2024 20:48:00 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p6-camera/</guid>
      <description>1. Story Nay mua được chiếc camera EZVIZ C6N 500k đã có thẻ nhớ 64GB. Về config xem thế nào..
2. Setup Camera EZVIZ Cắm thẻ nhớ vào, cắm nguồn, cài app trên điện thoại, đăng ký tài khoản = email, add device, quét mã, đăng nhập wifi 2.4G của nhà, định dạng lại thẻ nhớ, 1 lúc là xong.
Setup luồng RTSP stream:
Vào APP trên điện thoại (Chú ý cùng wifi với thiết bị) - Cài đặt - LAN LIVE VIEW - tìm thấy camera của mình - nhập password (là VERIFICATION CODE dưới đáy thiết bị) - Login</description>
    </item>
    
    <item>
      <title>Azure: Publish SaaS Offer (Software as a Service Offer)</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-publish-marketplace-offer-saas/</link>
      <pubDate>Mon, 01 Jan 2024 22:17:59 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-publish-marketplace-offer-saas/</guid>
      <description>1. Azure SaaS Offer là gì? Sơ đồ quyết định nên dùng Azure Marketplace Offer nào:
https://learn.microsoft.com/en-us/partner-center/marketplace/marketplace-commercial-transaction-capabilities-and-considerations#determine-offer-type-and-pricing-plan
2. Những điểm cần chú ý khi tạo SaaS Offer 2.1. SaaS Offer lifecycle Diagram về các thành phần involve trong 1 SaaS offer: https://learn.microsoft.com/en-us/partner-center/marketplace/azure-ad-saas#how-microsoft-entra-id-works-with-the-commercial-marketplace-for-saas-offers
Diagram về các giai đoạn cần để tạo 1 SaaS offer:
https://youtu.be/AnZDa0Z1z8I?t=265
Diagram ví dụ về quá trình 1 Customer discovery SaaS offer từ Marketplace, subscribe, activate plan, rồi unsubscribe offer đó.</description>
    </item>
    
    <item>
      <title>Playaround with Google Apps Script</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-google-apps-script-basic-gas/</link>
      <pubDate>Wed, 06 Dec 2023 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-google-apps-script-basic-gas/</guid>
      <description>Tạo 1 button trên Google Sheet để call API Tạo 1 file Google Sheet tùy ý,
Điền data linh tinh từ A1 đến F6.
vào Extension -&amp;gt; Apps Script như này để mở ra trang Code editor của GAS:
paste đoạn code sau vào rồi save:
function onOpen() { let ui = SpreadsheetApp.getUi(); ui.createMenu(&amp;#39;Hoangmnsd&amp;#39;) .addItem(&amp;#39;Format items&amp;#39;, &amp;#39;formatReport&amp;#39;) .addItem(&amp;#39;Call TestApi&amp;#39;, &amp;#39;callTestApi&amp;#39;) .addItem(&amp;#39;writeData Test&amp;#39;, &amp;#39;writeDataToRange&amp;#39;) .addToUi(); } function formatReport() { let sheet = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>Vulerability scan with Qualys</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-qualys-scan/</link>
      <pubDate>Wed, 29 Nov 2023 13:09:35 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-qualys-scan/</guid>
      <description>Gần đây mình có cơ hội được làm việc với Qualys. Qua 1 thời gian tìm hiểu thì mình đúc rút ra được 1 số kinh nghiệm nên cần phải hệ thống lại ngay.
1. Qualys là gì? Các tính năng của Qualys Qualys là 1 Cloud Platform để scan vulnerability. Ko phải như Sonarqube để làm code quality review.
Bạn mua license của Qualys để:
 Add các endpoint của bạn vào, qualys sẽ scan các endpoint đó (1 lần hoặc thường xuyên tùy bạn).</description>
    </item>
    
    <item>
      <title>Lost in sky</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-lost-in-sky/</link>
      <pubDate>Fri, 24 Nov 2023 10:27:53 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-lost-in-sky/</guid>
      <description>Story Dạo này mình tự đặt câu hỏi: Nếu bỗng 1 ngày mình bị đánh ngất, rồi đưa đến 1 nơi nào đó hết sức heo hút không người. Vậy thì làm cách nào để mình xác định được chỗ mình đang đứng là ở đâu trên Trái đất, hướng đông tây nam bắc. Liệu có thể dùng những kiến thức của người xưa như nhìn lên bầu trời để xác định phương hướng, kinh độ vĩ độ từ đó biết chỗ mình đang ở hay ko?</description>
    </item>
    
    <item>
      <title>Notes About Time Complexity</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-note-time-complexity-bigo/</link>
      <pubDate>Mon, 06 Nov 2023 15:54:05 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-note-time-complexity-bigo/</guid>
      <description>Story Trong khi tham gia các buổi phỏng vấn thì các bạn sẽ có thể bị hỏi về cách tính độ phức tạp thuật toán để tối ưu code (Với mình là 1 lần).
Mặc dù đã học ở Đại học rồi nhưng đến lúc phỏng vấn mình lại chẳng thế nhớ ra để mà trả lời.
Trong thực tế thì việc tính độ phức tạp của thuật toán rất quan trọng nhưng thường bị bỏ qua vì &amp;ldquo;Deadline gấp quá, code chạy được là ngon rồi, tối ưu thì sau này sẽ làm&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Not a tutorial: Stable Diffusion installation Notes</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-note-about-stable-diffusion-installation/</link>
      <pubDate>Fri, 25 Aug 2023 13:09:35 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-note-about-stable-diffusion-installation/</guid>
      <description>This is just my notes when playaround with Stable Diffusion, not a tutorial
1. Nếu máy bạn có card NVIDIA I follow this tutorial: https://www.howtogeek.com/830179/how-to-run-stable-diffusion-on-your-pc-to-generate-ai-images/
Mình sẽ tóm tắt lại các step.
Install Miniconda từ https://docs.conda.io/en/latest/miniconda.html. Mình Chọn bản Miniconda3 Windows 64 bit
Run file exe để cài đặt.
Download the Stable Diffusion GitHub Repository and the Latest Checkpoint: https://huggingface.co/CompVis/stable-diffusion#model-access
Ấn vào stable-diffusion-v-1-4-original (https://huggingface.co/CompVis/stable-diffusion-v-1-4-original). Sẽ ra chỗ download file sd-v1-4.ckpt (https://huggingface.</description>
    </item>
    
    <item>
      <title>Setup SSO (Single Sign On) with Keycloak &#43; VouchProxy/Oauth2Proxy &#43; Nginx</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-sso-with-keycloak-oauth2proxy-vouchproxy-and-nginx/</link>
      <pubDate>Sun, 20 Aug 2023 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-sso-with-keycloak-oauth2proxy-vouchproxy-and-nginx/</guid>
      <description>1. Story Giả sử bạn cần tích hợp nhiều application khác nhau. Có app thì có chức năng login, có app thì không. Nếu mỗi app dùng 1 ngôn ngữ riêng (python, react, java&amp;hellip;) thì việc xây dựng chức năng login riêng sẽ tốn effort, nếu app đó là của người khác maintain và họ nghỉ việc rồi thì còn tốn effort tìm hiểu bussiness của app đó.
Đó là từ góc nhìn của dev.</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 5) - Restore</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p5-restore/</link>
      <pubDate>Tue, 18 Jul 2023 23:04:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p5-restore/</guid>
      <description>Đây là phần riêng nói về quá trình mình restore rPi sang 1 chiếc microSD mới (từ 16Gb lên 64Gb)
Vì với chiếc microSD cũ mình đã setup hệ thống HASS và rất nhiều thứ linh tinh, nên giờ chuyển sang cần có plan cụ thể, cố gắng restore mọi thứ trơn tru trong thời gian ngắn nhất.
Trước đây ở part 1 mình đã setup Duplicati để backup các file trên rPi rồi.</description>
    </item>
    
    <item>
      <title>Expose your app running in private network via Putty SSH Tunnel</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-expose-localhost-webapp-by-ssh-tunnel/</link>
      <pubDate>Tue, 18 Jul 2023 14:20:21 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-expose-localhost-webapp-by-ssh-tunnel/</guid>
      <description>1. Tình huống User có 1 app cvat run trên port 8080 trong 1 VM A AWS Private subnet. Có 1 VM làm Bastion Host trong Public Subnet.
Giờ muốn SSH vào A từ máy laptop cá nhân rồi cài app lên port 8080, sau đó test để thử vào giao diện web app đó trên laptop cá nhân.
Kiến trúc như này:
2. Cách làm Để có thể SSH từ laptop mình vào EC2 trong private subnet:</description>
    </item>
    
    <item>
      <title>Setup NextCloud with Swag (nginx) on a VM</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-swag-w-nextcloud/</link>
      <pubDate>Sat, 15 Jul 2023 14:20:21 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-swag-w-nextcloud/</guid>
      <description>1. Story Câu chuyện là mình đang cần tìm 1 app Notes (Todo Notes) mới thay thế cho ColorNote.
Tìm hiểu nhiều thì thấy có người ta giới thiệu NextCloud Notes App. Muốn dùng cái này thì cần phải cài đặt NextCloud server của riêng mình. Khá hay nên vọc vạch xem sao.
Nhưng ko ngờ con đường setup Nextcloud gian nan ko tưởng.
Bắt đầu: (Mình viết theo trình tự thời gian, giống như 1 bài nhật ký quá trình debug của mình)</description>
    </item>
    
    <item>
      <title>Playaround with FastAPI Github Actions and Lambda</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-python-docker-playaround-fastapi/</link>
      <pubDate>Sat, 10 Jun 2023 14:32:58 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-python-docker-playaround-fastapi/</guid>
      <description>Gần đây mình đi tìm job mới, được 1 ông người Hàn bên Mỹ thi phải cho 1 bài test coding.
Thì mình cũng làm thôi, nhưng qua quá trình làm và suy nghĩ thì mình thấy trước giờ mình chưa làm 1 project như vậy bao giờ.
Tất nhiên là cuối cùng vẫn tạch job đó, nhưng có mấy cái nên note lại.
1. Requirements Đề bài là:
 Backend cho 1 app diagram như Canva Tự design data structures, objects, properties, functions/methods App đó có thể có nhiều shape khác nhau, tròn vuông chữ nhật&amp;hellip; User có thể drag/drop để create/move/resize/delete shape.</description>
    </item>
    
    <item>
      <title>Todo notes apps in comparison</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-todonotes-apps-comparison/</link>
      <pubDate>Tue, 23 May 2023 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-todonotes-apps-comparison/</guid>
      <description>Story Trước đây dùng ColorNotes thấy khá OK, nhưng lên Windows thì app đấy đúng là thảm họa. Nó cũng ko có version web. Gần đây cài lại Wins mình cũng ko thể tìm thấy ColorNotes trên Windows luôn.
Giờ phải tìm 1 apps để take notes mới. Tìm 1 lượt mới thấy nhu cầu của mình cứ tưởng là &amp;ldquo;đơn giản, kiểu gì chả có 1 app thỏa mãn hết, chỉ cần giống ColorNotes nhưng thêm 1 vài tính năng, 1 vài support trên OS khác là OK&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Grafana Loki and Promtail for Log Aggregation (Logging)</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-docker-loki-grafana-promtail-for-logging/</link>
      <pubDate>Fri, 14 Apr 2023 22:49:25 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-docker-loki-grafana-promtail-for-logging/</guid>
      <description>Khi bạn phải quản lý log trên nhiều VM khác nhau, thậm chí là quản lý cả log trong các docker container chạy trên các VM đó, thì việc theo dõi log sẽ gặp nhiều khó khăn. Chẳng lẽ cứ SSH vào từng VM rồi tail từng file hay sao?
Điều này dẫn đến các giải pháp logging (log aggregation) ra đời: ELK, EFK, nay mình giới thiệu 1 trending tool là Loki của Grafana</description>
    </item>
    
    <item>
      <title>VPC/Vnet Architecture (Azure,AWS)</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-az-network-architect/</link>
      <pubDate>Tue, 04 Apr 2023 21:54:05 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-az-network-architect/</guid>
      <description>1. AWS VPC Architecture Giải thích:
  Vì chi phí cho traffic từ private subnet ra internet mà đi qua 1 NAT Gateway khác AZ sẽ cao hơn, nên nếu traffic nhiều thì mỗi AZ 1 NAT Gateway thì sẽ ko có traffic đi sang AZ khác.
  Có thể chọn 1 NAT Gateway thôi cho all private subnet nếu traffic từ private subnet ra ngoài internet ít.</description>
    </item>
    
    <item>
      <title>AWS: EC2 Storage with IOPS focus</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-ec2-with-iops/</link>
      <pubDate>Thu, 30 Mar 2023 21:54:05 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-ec2-with-iops/</guid>
      <description>1. Story Rút ra sau khi đọc bài này: https://taoquangne.com/post/how-to-resolve-io-issue-on-cloud/
Chúng ta đều biết rằng dùng Cloud chưa bao giờ là giải pháp để lựa chọn nếu công ty bạn ít tiền cả.
Nếu bạn test/dev thật nhanh 1 dự án, hoặc muốn go LIVE 1 ý tưởng nhanh nhất có thể, hoặc muốn giảm thiểu tối đa công việc maintain phần cứng về long-term, thì dùng Cloud Service là lựa chọn số 1.</description>
    </item>
    
    <item>
      <title>Troubleshoot Azure Linux VM: Internet &amp; SSH Connections</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-troubleshoot-linux-vm-internet-ssh-connections/</link>
      <pubDate>Tue, 14 Mar 2023 22:58:56 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-troubleshoot-linux-vm-internet-ssh-connections/</guid>
      <description>1. Story Mới đây mình gặp 1 tình huống là tạo 1 VM (Ubuntu18.04-LTS) trên Azure cho Dev sử dụng, có toàn quyền sudo luôn.
Dev setup nhiều phần mềm, và sau 1 thời gian thì VM bị lỗi ko thể SSH vào được nữa.
ssh: port 22: Connection timed out Nói chung là sử dụng hàng Cloud thì xử lý những case kiểu này có tài liệu khá đầy đủ, vì Azure là 1 đơn vị cung cấp Cloud lớn.</description>
    </item>
    
    <item>
      <title>Setting up my environments Windows, Ubuntu</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setting-up-my-environments/</link>
      <pubDate>Fri, 03 Mar 2023 21:56:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setting-up-my-environments/</guid>
      <description>Windows 1. Create USB Boots Win10 1.1. Download windows 10 từ https://www.microsoft.com/software-download/windows10.
Bật F12 vì MS chỉ cho phép tải từ trình duyệt mobile.
1.2. Download Rufus từ https://rufus.ie/ Xong thì có thể eject USB và rút ra
2. Install Win10 from USB Boots 2.1. Cắm USB đã cài Win10 vào 2.2. Start/restart máy ấn liên tục F10 để vào Boots Menu screen của NUC11i5, ấn liên tục vào F12 nếu là máy Lenovo Thinkbook 14p, ấn ESC nếu là Asus K501LB.</description>
    </item>
    
    <item>
      <title>Integrate Telegram Bot With ChatGPT</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-integrate-telegram-bot-with-chatgpt/</link>
      <pubDate>Thu, 16 Feb 2023 23:37:13 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-integrate-telegram-bot-with-chatgpt/</guid>
      <description>1. Run trên máy local mình sẽ sử dụng repo này: https://github.com/acheong08/ChatGPT
Mình sẽ cần install python3 trước
python -m pip install --upgrade pip pip3 install --upgrade revChatGPT Get API Key: https://platform.openai.com/account/api-keys
(Bước này vì mình đã mua 1 account ChatGPT 250k có sẵn 18$ credit rồi nên lấy API key khá dễ)
API Key có dạng: sk-xxx
file basic-sample.py:
from revChatGPT.V3 import Chatbot chatbot = Chatbot(api_key=&amp;#34;sk-xxx&amp;#34;) response = chatbot.ask(&amp;#34;Hello&amp;#34;) print(&amp;#34;ChatGPT: &amp;#34; + response) Run: python3 basic-sample.</description>
    </item>
    
    <item>
      <title>Python Error: ForkAwareLocal Multiprocessing</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-python-error-forkawarelocal-multiprocessing/</link>
      <pubDate>Sat, 11 Feb 2023 23:43:22 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-python-error-forkawarelocal-multiprocessing/</guid>
      <description>Lỗi này xảy ra với hàm schedule-check-blog-comment-v3 của mình,
Cái nguy hiểm của nó là thi thoảng mói xảy ra. Lúc test thì ngon lành, nếu ko monitor thường xuyên thì sẽ ko biết có lỗi
Gần đây check cái log monitoring của Lambda mới thấy tỉ lệ lỗi khá nhiều: (ảnh) trong 14 lần chạy gần nhất thì lỗi đến 6 lần
Sau khi tìm xem log thì thấy lỗi AttributeError: &#39;ForkAwareLocal&#39; object has no attribute &#39;connection&#39; này:</description>
    </item>
    
    <item>
      <title>Notes About Docker OpenLDAP</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-note-about-docker-openldap/</link>
      <pubDate>Wed, 08 Feb 2023 23:10:28 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-note-about-docker-openldap/</guid>
      <description>Nếu bạn đang quản lý nhiều application nhưng mỗi app lại có 1 database riêng để lưu trữ user/password,
bạn sẽ cần phải nhớ rất nhiều user/password cho mỗi app. Sau khi đổi password thì lại càng loạn hơn.
Để giải quyết, bạn sẽ muốn chỉ dùng 1 database cho user/password, tất cả application sẽ chọc vào 1 database đó để xác thực user.
Có nhiều phần mềm để thực hiện việc đó, trong đó thì OpenLDAP là 1 open-source rất hay, phù hợp cho các application nội bộ, số lượng user nhỏ.</description>
    </item>
    
    <item>
      <title>Oracle Cloud Infrastructure CLI scripts</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-oracle-oci-cli-script/</link>
      <pubDate>Fri, 20 Jan 2023 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-oracle-oci-cli-script/</guid>
      <description>Story Gần đây sau khi tạo account Oracle mới (region Singapore), mình gặp khó khăn khi ko thể tạo VM được vì lỗi: Error: 500-InternalError, Out of host capacity.
Mỗi region chỉ có 1 số lượng có hạn các VM CPU và RAM thôi, nên nếu ai hên thì mới tạo được VM. Nếu cứ lúc nào nghĩ đến mới vào tạo thì sẽ chẳng bao giờ cạnh tranh được.</description>
    </item>
    
    <item>
      <title>Python: Walrus operator, lambda, arrow, class, (non)keyword arguments</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-python-walrus-lambda-arrow-class-args/</link>
      <pubDate>Fri, 20 Jan 2023 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-python-walrus-lambda-arrow-class-args/</guid>
      <description>Bài này note lại những thứ khá phổ biến trong Python nhưng mình ít dùng/để ý đến nó.
Với mình thì công việc DevOps cũng có làm việc với Python scripting nhưng ở level rất basic thôi. Những thứ này đúng là có 1 chút lạ lẫm.
1. Walrus Operator Toán tử := trong python được gọi là &amp;ldquo;Walrus Operator&amp;rdquo;, được giới thiệu từ Python3.8. Giúp làm code ngắn gọn hơn.</description>
    </item>
    
    <item>
      <title>Generate Lets Encrypt Certificate</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-note-generate-lets-encrypt-certificate/</link>
      <pubDate>Sat, 17 Dec 2022 22:17:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-note-generate-lets-encrypt-certificate/</guid>
      <description>DNS and HTTP Về cơ bản để tạo LetsEncrypt certificate sẽ có 2 cách, 1 là DNS 2 là HTTP
  DNS: Trên Server đó bật terminal, run command certbot gen cert, sẽ nhận được 1 token, lấy token đó tạo 1 record TXT trên DNS provider. Quay lại màn hình terminal, tiếp tục enter để LetsEncrypt verify rằng bạn là người sở hữu domain.
  HTTP: Trên Server đó bật terminal, run command certbot gen cert.</description>
    </item>
    
    <item>
      <title>Install Minikube on Linux Ubuntu arm64 (not amd64)</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-install-minikube-on-linux-ubuntu-arm64-not-amd64/</link>
      <pubDate>Tue, 13 Dec 2022 20:42:58 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-install-minikube-on-linux-ubuntu-arm64-not-amd64/</guid>
      <description>1. Story Vì sự khác biệt CPU arhchitecture có thể dẫn đến lỗi nếu bạn cài đặt phần mềm ko tương thích.
Mình có cơ hội sử dụng cả 2 loại amd64 và arm64, gặp nhiều lỗi khi làm theo các tut trên mạng nên phải viết bài này.
Check CPU architecture của máy bạn đang sử dụng:
dpkg --print-architecture kết quả có thể ra arm64 hoặc amd64, tùy theo đó mà chọn các package phù hợp để install</description>
    </item>
    
    <item>
      <title>Reverse proxy and Forward proxy</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-reverse-proxy-forward-proxy/</link>
      <pubDate>Tue, 06 Dec 2022 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-reverse-proxy-forward-proxy/</guid>
      <description>1. Story Trên thực tế có 2 loại proxy là Reverse Proxy (ex: Nginx) và Forward proxy (ex: Tinyproxy)
Reverse Proxy được config ở phía Server để route các traffic từ Client đến backend phù hợp. Client sẽ ko biết về sự tồn tại của reverse proxy (Nginx).
Forward Proxy được config ở phía Client để control traffic đến và đi ra khỏi network của Client. Server sẽ ko biết về sự tồn tại của forward proxy.</description>
    </item>
    
    <item>
      <title>Connect Home Assistant to Amazon Alexa Echo Dot4</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-connect-home-assistant-to-alexa-echo-dot4/</link>
      <pubDate>Fri, 25 Nov 2022 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-connect-home-assistant-to-alexa-echo-dot4/</guid>
      <description>1. Setup Alexa connect to Home Assistant Làm theo hướng dẫn ở đây:
https://www.home-assistant.io/integrations/alexa.smart_home/
1.1. Setup Trên AWS Console create Role for Lambda:
Trên Alexa developer page, create skill:
Trên AWS Console Lambda, tạo function, nên chọn us-east-1 vì các region khác dễ bị lỗi lắm:
Set trigger to Alexa:
Upload code from Github:
Setup Environment variables:
Update home assistant file configuration.yml:
Create long live token để test tý nữa:</description>
    </item>
    
    <item>
      <title>OpenSSL with Python and Bash</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-openssl-aes256-python-bash/</link>
      <pubDate>Sun, 20 Nov 2022 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-openssl-aes256-python-bash/</guid>
      <description>Story Bài toán là: viết 2 script (Bashell và python3.9) để encrypt string theo AES-256 sao cho kết quả phải giống nhau giữa Bashell và Python3.9
Khi chạy bashell thì đơn giản, chúng ta cần dùng openssl version 1.1.1:
$ echo -n Hello | openssl enc -aes-256-cbc -pass pass:&amp;#34;qwerty&amp;#34; -e -base64 -nosalt -md md5 -p *** WARNING : deprecated key derivation used. Using -iter or -pbkdf2 would be better. key=D8578EDF8458CE06FBC5BB76A58C5CA452E5CFB01236818B586F3F17BEF92D59 iv =7CE322DF4C30C37DDD74C05B170A74E6 wMdoe1EZD4tVU9Fm/AWbXg== -&amp;gt; Command trên:</description>
    </item>
    
    <item>
      <title>Earth 4 Seasons</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-earth-4-seasons/</link>
      <pubDate>Sun, 13 Nov 2022 10:27:53 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-earth-4-seasons/</guid>
      <description>Xuân phân, Thu phân, Hạ chí, Đông chí Xuân phân, Thu phân được xác định dựa trên thời điểm mặt trời gần xích đạo nhất.
Đông chí, Hạ chí được xác định dựa trên thời điểm mặt trời xa xích đạo nhất.
 Xuân phân thường rơi vào 20/3, để biết giờ chính xác khi xích đạo gần mặt trời nhất thì search google điểm phân. Thu phân thường rơi vào 22,23/9.</description>
    </item>
    
    <item>
      <title>Dockerize ReactJS/GatsbyJS app and Run it in Dev environment &#43; good practices</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-dockerize-reactjs-gatsby-app-good-practices/</link>
      <pubDate>Sat, 22 Oct 2022 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-dockerize-reactjs-gatsby-app-good-practices/</guid>
      <description>1. Story Mình có 1 static site tạo ra bằng GatsbyJS (1 framework base trên ReactJS) đã lâu, cách đây khoảng 1 năm:
https://github.com/hoangmnsd/hoangmnsd-the404blog-theme.git
Giờ đổi máy muốn tiếp tục quay lại phát triển app đó. Nhưng laptop yếu quá ko thể npm install nổi.
-&amp;gt; Mình chuyển hướng sang deploy app đó trên 1 server riêng như RasberryPi, nhưng lại dính đến network bandwidth quá chậm, npm install rất tốn thời gian.</description>
    </item>
    
    <item>
      <title>List JS projects for newbie</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-list-js-projects-for-newbie/</link>
      <pubDate>Sat, 15 Oct 2022 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-list-js-projects-for-newbie/</guid>
      <description>List các project viết bằng JS thú vị để tham khảo
Mình tổng hợp lại từ The Odin Project (1 dự án/khóa học được khá nhiều người học JS recommend)
1. Khóa Foundation Project: Recipes https://www.theodinproject.com/lessons/foundations-recipes
5 solution tiêu biểu nhiều like:
https://github.com/Jason-B-Jiang/Recipes-Website
https://github.com/Criosyom/odin-recipes
https://github.com/Appletri/odin-recipes
https://github.com/dipps18/odin-recipes
https://github.com/TYLPHE/odin-recipes
Project: Landing Page https://www.theodinproject.com/lessons/foundations-landing-page
5 solution tiêu biểu nhiều like: https://github.com/Criosyom/Hakurei_Shrine
https://github.com/Lun-Dev/Landing-Page
https://github.com/othercatt/odin-landing-page
https://github.com/Appletri/landing-page
https://github.com/piotrnajda3000/landing-page
Project: Rock Paper Scissors https://www.theodinproject.com/lessons/foundations-rock-paper-scissors
5 solution tiêu biểu nhiều like:</description>
    </item>
    
    <item>
      <title>Performance Tests with Locust</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-performance-tests-note-locust/</link>
      <pubDate>Thu, 29 Sep 2022 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-performance-tests-note-locust/</guid>
      <description>1. Giải thích các khái niệm 1 cách ngắn gọn Performance test ko phải là 1 kiểu test cụ thể nào, nó là 1 khái niệm chung cho tất cả các kiểu test nhằm validate performance và xác định performance issues.
Load test là 1 kiểu test để validate xem application của bạn có thỏa mãn các goals đã đc define từ trước hay ko? Khi xây dựng app thì bạn phải define rằng app này sẽ cho phép bao nhiêu CCU?</description>
    </item>
    
    <item>
      <title>When your VM failed to reach Internet and story about Azure Load Balancer</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-when-your-vm-cannot-reach-internet-and-stry-abt-load-balancer/</link>
      <pubDate>Wed, 07 Sep 2022 15:17:42 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-when-your-vm-cannot-reach-internet-and-stry-abt-load-balancer/</guid>
      <description>1. Story Đây là note để xử lý khi bạn thấy Server của bạn có vẻ như ko thể kết nối internet được
Có thể bạn sẽ nhìn thấy thông báo này ngay khi ssh vào server:
Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check you Internet connection or proxy setting Hoặc khi bạn run 1 vài command đơn giản như sudo apt update, màn hình sẽ dừng lại ở 0% và cuối cùng báo lỗi:</description>
    </item>
    
    <item>
      <title>Not a tutorial: Set Variable List in Playbook; Ignore errors (Ansible)</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-note-set-var-list-ansible/</link>
      <pubDate>Sun, 21 Aug 2022 13:09:35 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-note-set-var-list-ansible/</guid>
      <description>This is just my notes when playaround with ansible playbook, not a tutorial
1. Story 1 Khi viết ansible playbook có khi bạn phải xử lý nhiều items giống nhau, đó là bạn phải dùng loop, with_items
Để tránh việc tạo quá nhiều biến, set_facts nhiều trong playbook, bạn nên đưa hết các item ra file var
Khi có thêm jinja template vào thì cũng cần biết cách để đưa var vào</description>
    </item>
    
    <item>
      <title>Connect Home Assistant to Broadlink Rm4 Mini</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-connect-home-assistant-to-broadlink-rm4-mini/</link>
      <pubDate>Sun, 14 Aug 2022 18:19:25 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-connect-home-assistant-to-broadlink-rm4-mini/</guid>
      <description>1. Story Nếu như nhà bạn có 1 chiếc điều hòa bình thường (ko phải loại smart), bạn sẽ phải điều khiển nó thông qua 1 cái điều khiển (remote) riêng.
Rồi có TV bạn lại có 1 remote cho nó. Nếu có thêm 1 chiếc quạt cây, chắc bạn cũng sẽ có remote dành riêng cho nó. Rồi nếu có thêm cái quạt trần, bạn lại có thêm 1 cái remote cho nó.</description>
    </item>
    
    <item>
      <title>Azure Synapse: Analyze data with serverless SQL and visualize it on PowerBI</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-synapse-basic-data-flow-analyze-visualize-on-powerbi/</link>
      <pubDate>Fri, 24 Jun 2022 23:36:48 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-synapse-basic-data-flow-analyze-visualize-on-powerbi/</guid>
      <description>This post is about a demo using Azure Synapse Analytics. Analyze data with serverless SQL, then visualize on Power BI desktop
Overview about Azure Synapse Analytics Azure Synapse contains the same Data Integration engine and experiences as Azure Data Factory, allowing you to create rich at-scale ETL pipelines without leaving Azure Synapse Analytics.
 Ingest data from 90+ data sources Code-Free ETL with Data flow activities Orchestrate notebooks, Spark jobs, stored procedures, SQL scripts, and more  Synapse SQL: is the ability to do T-SQL based analytics in Synapse workspace.</description>
    </item>
    
    <item>
      <title>Import new dashboard to Home Assistant: Minimalist</title>
      <link>https://hoangmnsd.github.io/bk/home-assistant-import-new-dashboard-minimalist/</link>
      <pubDate>Sun, 22 May 2022 21:13:54 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/home-assistant-import-new-dashboard-minimalist/</guid>
      <description>Đây là bài tóm tắt các step của clip này: https://www.youtube.com/watch?v=A0fMt8IRKoI
Trang chủ để theo dõi các custom card: https://ui-lovelace-minimalist.github.io/UI/usage/custom_cards/custom_card_homeassistant_updates/
Mục đích cuối cùng là import được dashboard Minimalist theme vào HASS
Steps Add repository: Add some required repos - browser-mod: Add some required repos - auto-entities: Add some required repos - button-cards: Add some required repos - card-mod: Add some required repos - mini-graph: Add some required repos - mini-media: Add some required repos - light-entities: Add some required repos - simple-weather: Add some required repos - my-cards: -&amp;gt; restart HASS</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 3) - Https</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p3-https/</link>
      <pubDate>Wed, 18 May 2022 23:04:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p3-https/</guid>
      <description>Đây là phần tiếp theo bài này: Setup Home Assistant on Raspberry Pi (Part 2) - DMZ and iptables rule)
1. Access from external network Đọc kỹ bài sau để biết về các parameter có thể sử dụng: https://github.com/linuxserver/docker-swag
Trước đó hãy chắc chắn mình đã mở port 80,443 trên iptables DOCKER-USER Chain nhé
sudo iptables -L -v -n | more Chain DOCKER-USER (1 references) pkts bytes target prot opt in out source destination 67922 4074K ACCEPT tcp -- wlan0 * 0.</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 4) - InfluxDB</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p4-influxdb/</link>
      <pubDate>Wed, 18 May 2022 23:04:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p4-influxdb/</guid>
      <description>Chú ý:
 Cách làm này recommend dùng để lưu short term data trong Postgresql, Logbook của bạn sẽ hiển thị data tối đa dựa trên config recorder.purge_keep_days trong file hass/config/configuration.yaml. Để lưu long term data thì recommend dùng InfluxDB để lưu, và dùng Grafana (tự dựng Dashboard) để visualize.  1. Setup Postgresql for short term data Làm theo bài này:
Set up Postgresql, sửa docker-compose.yml file:
homeassistant-db: container_name: homeassistant-db environment: POSTGRES_DB: &amp;#34;&amp;lt;YOUR_DB_NAME&amp;gt;&amp;#34; POSTGRES_PASSWORD: &amp;#34;&amp;lt;YOUR_PASSWORD&amp;gt;&amp;#34; POSTGRES_USER: &amp;#34;&amp;lt;YOUR_DB_USER&amp;gt;&amp;#34; image: &amp;#34;postgres:12.</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 2) - iptables rule and DMZ</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p2-dmz/</link>
      <pubDate>Sun, 15 May 2022 18:34:01 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-p2-dmz/</guid>
      <description>Đây là phần cố gắng giải quyết vấn đề khi mình làm cái này: 9. Install DuckDNS (for expose outside access purpose)
Tóm tắt tình huống của mình: Có 1 RPi, chạy HASS trên docker. DÙng mạng VNPT, ko thể Port Forwarding được port 443 (do router đã reserve port 443, 80).
-&amp;gt; Phải dùng chức năng DMZ - cho RPi vào DMZ, nhưng chức năng này lại mở all port (bao gồm cả 443) trên con RPi (risk về security)</description>
    </item>
    
    <item>
      <title>Connect Home Assistant to LG thinQ Washer</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-connect-home-assistant-to-lg-thinq-washer/</link>
      <pubDate>Sat, 07 May 2022 10:24:37 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-connect-home-assistant-to-lg-thinq-washer/</guid>
      <description>Bài này hướng dẫn các integrate Máy giặt LG ThinQ FV1409S4W đến Home Assistant Container
Các bước setup Tải app LG ThinQ về, đăng ký account độc lập LG ThinQ, chú ý là ko đăng ký bằng Social Network account như (Google, Facebook or Amazon).
Sau đó làm theo các hướng dẫn trên LG ThinQ App để add/kết nối với máy giặt.
Chú ý sau khi bật nút Power trên máy giặt.</description>
    </item>
    
    <item>
      <title>Connect Home Assistant Container to Xiaomi Air Purifier3H</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-connect-home-assistant-to-air-purifier3h/</link>
      <pubDate>Sun, 01 May 2022 22:52:01 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-connect-home-assistant-to-air-purifier3h/</guid>
      <description>Làm theo 1 số hướng dẫn trên mạng để Connect Mi Air Purifier 3H đến HASS thường bị lỗi:
platform: xiaomi_miio ko còn được HASS support, timeout khi connect. Cuối cùng mình đã tìm được cách để làm được. Đó là dùng custom component của Github này: https://github.com/syssi/xiaomi_airpurifier/custom_components/
Tuy nhiên sau khoảng 3 tháng sử dụng, mình thấy trình độ tăng lên,
mình phát hiện ra có 1 lỗi là ko thể setup được LED Brightness.</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 1) - Addons</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-and-addons/</link>
      <pubDate>Sun, 01 May 2022 14:20:21 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-home-assistant-on-raspberry-pi-and-addons/</guid>
      <description>Bài này tổng hợp các step gần như từ đầu đến cuối để setup Hệ thống Home Assistant Container trên Raspberry Pi
trước khi install:
$ df -h Filesystem Size Used Avail Use% Mounted on /dev/root 59G 1.7G 55G 3% / devtmpfs 3.6G 0 3.6G 0% /dev tmpfs 3.9G 0 3.9G 0% /dev/shm tmpfs 1.6G 1.1M 1.6G 1% /run tmpfs 5.0M 4.0K 5.0M 1% /run/lock /dev/mmcblk0p1 255M 31M 225M 13% /boot tmpfs 782M 0 782M 0% /run/user/1000 1.</description>
    </item>
    
    <item>
      <title>Azure ACI notes</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-aci-notes/</link>
      <pubDate>Fri, 29 Apr 2022 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-aci-notes/</guid>
      <description>1. Gán Role cho Identity = ARM Bạn có 1 ACI container, đã enable System assigned identity
Bạn muốn gán Role READER cho identity trên bằng ARM Quan trọng là bạn phải biết cách lấy dc principalId của cái System assigned identity.
Ví dụ sau:
// add Role to SystemAssigned identity of ACI { &amp;#34;type&amp;#34;: &amp;#34;Microsoft.Authorization/roleAssignments&amp;#34;, &amp;#34;apiVersion&amp;#34;: &amp;#34;2018-09-01-preview&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;[variables(&amp;#39;aciRoleDefinitionName&amp;#39;)]&amp;#34;, &amp;#34;dependsOn&amp;#34;: [ &amp;#34;[variables(&amp;#39;aciContainerGroupName&amp;#39;)]&amp;#34; ], &amp;#34;properties&amp;#34;: { &amp;#34;roleDefinitionId&amp;#34;: &amp;#34;[variables(&amp;#39;aciRoleDefinitionId&amp;#39;)]&amp;#34;, &amp;#34;principalId&amp;#34;: &amp;#34;[reference(resourceId(&amp;#39;Microsoft.ContainerInstance/containerGroups&amp;#39;, variables(&amp;#39;aciContainerGroupName&amp;#39;)), &amp;#39;2021-09-01&amp;#39;, &amp;#39;Full&amp;#39;).</description>
    </item>
    
    <item>
      <title>Azure Synapse ARM Template Output properties</title>
      <link>https://hoangmnsd.github.io/bk/azure-notes-synapse-arm-template-output/</link>
      <pubDate>Sat, 23 Apr 2022 20:59:05 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/azure-notes-synapse-arm-template-output/</guid>
      <description>Vấn đề Khi các bạn tạo Azure Synapse bằng ARM template. Bạn muốn output ra Workspace name, SQL endpoint, Synapse Studio URL,&amp;hellip; nhưng ko biết làm sao?
Hiện tượng Có thể bạn sẽ gặp lỗi này:
{&amp;quot;status&amp;quot;:&amp;quot;Failed&amp;quot;,&amp;quot;error&amp;quot;:{&amp;quot;code&amp;quot;:&amp;quot;DeploymentOutputEvaluationFailed&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;Unable to evaluate template outputs: &#39;synapseWorkspaceName&#39;. Please see error details and deployment operations. Please see https://aka.ms/arm-debug for usage details.&amp;quot;,&amp;quot;details&amp;quot;:[{&amp;quot;code&amp;quot;:&amp;quot;DeploymentOutputEvaluationFailed&amp;quot;,&amp;quot;target&amp;quot;:&amp;quot;synapseWorkspaceName&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;The template output &#39;synapseWorkspaceName&#39; is not valid: The language expression property &#39;name&#39; doesn&#39;t exist, available properties are &#39;apiVersion, location, tags, identity, properties, condition, existing, isConditionTrue, subscriptionId, resourceGroupName, scope, resourceId, referenceApiVersion, isTemplateResource, isAction, provisioningOperation&#39;.</description>
    </item>
    
    <item>
      <title>Simple Demo: Data transfer between Raspberry Pi and AWS IoT Core</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-simple-demo-data-transfer-between-raspberry-and-aws-iotcore/</link>
      <pubDate>Mon, 11 Apr 2022 14:13:16 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-simple-demo-data-transfer-between-raspberry-and-aws-iotcore/</guid>
      <description>1. Cách làm 1.1. Trên AWS IoT Core, tạo things Go to Manage -&amp;gt; Thing -&amp;gt; Create single thing
Note to select Auto-generate a new certificate (Recommended)
Download all 5 files (Certificate and Key)
Đổi tên các file đó cho dễ nhớ, rồi dùng WinSCP để transfer 5 file đó lên RPi của bạn
1.2. Trên AWS IoT Core, tạo policy Goto Secure -&amp;gt; Policies -&amp;gt; Create Policy
điền như hình sau:</description>
    </item>
    
    <item>
      <title>Raspberry Pi: Setup auto connect wifi at first boots for Ubuntu OS, Raspian OS</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-setup-auto-connect-wifi-raspberrypi-ubuntu-raspian-os/</link>
      <pubDate>Sat, 26 Mar 2022 23:42:35 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-setup-auto-connect-wifi-raspberrypi-ubuntu-raspian-os/</guid>
      <description>Mày mò vọc vạch về Raspberry Pi 4B/8GB 1 chút.
Vấn đề Ban đầu mình muốn connect wifi cho RPi thì phải flash OS vào thẻ microSD, cắm bàn phím, màn hình, rồi cắm dây nguồn.
Sau đó vào sửa 1 số file config để connect wifi. Điều này khiến mình thấy loằng ngoằng và tốn thời gian.
Mục tiêu Với nhu cầu bản thân chỉ cần remote từ laptop SSH vào RPi (via Putty), ko cần RPi có desktop.</description>
    </item>
    
    <item>
      <title>Azure: Copy Snapshot to Storage Account</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-copy-snapshot-to-storage-account/</link>
      <pubDate>Fri, 14 Jan 2022 18:03:03 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-copy-snapshot-to-storage-account/</guid>
      <description>Trong quá trình config cài cắm, có thể bạn sẽ muốn tạo snapshot/đóng image cho 1 VM nào đó. Sau này bạn chỉ cần tạo lại VM từ snapshot đó là xong.
Azure có tính năng Capture - create an image, nhưng Nếu capture bạn sẽ phải stop VM, và sẽ ko thể sử dụng VM được nữa. (quá trình Capture đòi hỏi generalise VM và xóa các thông tin về user)</description>
    </item>
    
    <item>
      <title>Git - Difference between Rebase and Merge</title>
      <link>https://hoangmnsd.github.io/bk/git-different-rebase-merge/</link>
      <pubDate>Mon, 03 Jan 2022 23:43:28 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/git-different-rebase-merge/</guid>
      <description>Câu hỏi về So sánh git rebase và git merge đôi khi được hỏi trong phỏng vấn. Bạn nên nắm được sự khác nhau để tự tin hơn khi trả lời.
1. Intro Đôi khi chúng ta thấy các Developer dùng git rebase để merge/lấy các thay đổi từ nhánh khác về.
Nhưng chỉ nên dùng git rebase trên 1 nhánh của riêng bạn (hoặc chỉ mình bạn làm việc trên nhánh đó),</description>
    </item>
    
    <item>
      <title>Monty Hall Problem Demo</title>
      <link>https://hoangmnsd.github.io/bk/monty-hall-problem-demo/</link>
      <pubDate>Fri, 24 Dec 2021 22:53:49 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/monty-hall-problem-demo/</guid>
      <description>Vấn đề Tìm hiểu về Monty Hall problem giúp bạn thấy được sức mạnh của Xác suất thống kê.
Monty Hall problem nói về 1 trò chơi như sau:
 Monty đưa cho bạn 3 cánh cửa (A,B,C), đằng sau đó là 2 con dê và 1 cái ô tô. Bạn chọn 1 cửa (giả sử là A). Bạn nghĩ rằng sau cánh cửa đó là cái ô tô. Monty kiểm tra 2 cánh cửa còn lại (B,C), và mở 1 cánh cửa có con dê.</description>
    </item>
    
    <item>
      <title>Amateur tutor Git commands (rebase interactive, stash, reset)</title>
      <link>https://hoangmnsd.github.io/bk/git-tutor-rebase-stash-reset/</link>
      <pubDate>Fri, 05 Nov 2021 23:43:28 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/git-tutor-rebase-stash-reset/</guid>
      <description>Khi sử dụng Git dần dần trở nên thường xuyên thì việc hiểu về các câu lệnh nâng cao của nó càng trở nên cần thiết.
Sử dụng nhiều thì dẫn đến commit nhiều, commit nhiều thì việc commit sai file, commit sai message là chuyện dễ hiểu.
Từ đó dẫn đến nhu cầu sửa lại commit message, commit sai muốn revert lại commit trước đó, gộp các commit lại cho dễ nhìn, cho trace log trong tương lai, và &amp;hellip; nhìn log commit cho đẹp.</description>
    </item>
    
    <item>
      <title>GitOps: Playaround with ArgoCD and private Gitlab CI, ACR</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-playaround-w-argocd-and-private-gitlab-ci-acr/</link>
      <pubDate>Mon, 01 Nov 2021 21:16:47 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-playaround-w-argocd-and-private-gitlab-ci-acr/</guid>
      <description>1. Intro Demo about ArgoCD with private Gitlab CI repository, private ACR 2. Prerequisites  Basic knowledge about Azure, ssh-keygen, K8S, Gitlab, Docker commands Workspace: run commands on Azure Cloudshell Prepare an AKS cluster (Standard_DS2_v2, kubernetes version 1.21.2) Prepare an ACR (Azure container registry) with credential  export ACR_SERVER=&amp;#34;YOUR_ACR_NAME.azurecr.io&amp;#34; export ACR_USER=&amp;#34;YOUR_ACR_USER_NAME&amp;#34; export ACR_PASSWORD=&amp;#34;YOUR_ACR_PASSWORD&amp;#34; Clone 2 projects to your workspace:
 https://gitlab.com/argocd-demo2801/gitops-chart https://gitlab.com/argocd-demo2801/webapp  3. Setup 3.1. Config on Webapp repository https://gitlab.</description>
    </item>
    
    <item>
      <title>Azure: How to change private IP of VM, Vnet, Subnet, Load balancer</title>
      <link>https://hoangmnsd.github.io/bk/azure-update-private-ip-vnet-subnet-vm-loadbalancer/</link>
      <pubDate>Sat, 30 Oct 2021 15:24:42 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/azure-update-private-ip-vnet-subnet-vm-loadbalancer/</guid>
      <description>You cannot move a VM from a Vnet/subnet to different Vnet/subnet without re-creating the VM. But in some specific cases, you may not have to move VM to another Vnet/subnet, it will be easier when you just change the private IP of Vnet/subnet/VM/Load balancer&amp;hellip;
Background Assume that you&amp;rsquo;re having a Virtual machine with private IP is: 10.20.1.8 and you want to change it to: 10.25.2.9.
See this picture:
Note that this article is not about moving VM to a different Vnet/Subnet.</description>
    </item>
    
    <item>
      <title>Azure: Request Access Token to Digital Twins use User-Assigned Identity</title>
      <link>https://hoangmnsd.github.io/bk/azure-request-accesstoken-to-digital-twins-managed-identity/</link>
      <pubDate>Fri, 15 Oct 2021 20:57:39 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/azure-request-accesstoken-to-digital-twins-managed-identity/</guid>
      <description>Giống như IAM Role cho EC2 trên AWS, thì trên Azure cũng có feature tương tự đó là Managed identity (System assgined identity hoặc User assigned identity)
Prerequisites Bạn đã tạo User-Assgined identity, VM đã enable identity.
Story Theo Azure official document, ví dụ để lấy access token dùng Azure Resource manager thì từ trong VM cần run command như này:
response=$(curl &amp;#39;http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&amp;amp;resource=https%3A%2F%2Fmanagement.azure.com%2F&amp;#39; -H Metadata:true -s) access_token=$(echo $response | python -c &amp;#39;import sys, json; print (json.</description>
    </item>
    
    <item>
      <title>Play around with Python-Selenium</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-play-around-w-selenium/</link>
      <pubDate>Wed, 06 Oct 2021 13:47:39 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-play-around-w-selenium/</guid>
      <description>This is just my notes when playaround with python-selenium, not a tutorial
1. Workspace 1: Windows, GitBash terminal, PowerShell, Docker for Windows, Firefox Prepare:
  Install Python, selenium follow this docs:
https://selenium-python.readthedocs.io/installation.html
Open GitBash:
sh pip install selenium
Download geckodriver, extract to exe file, update PATH environment
  Run Selenium webdriver follow this docs:
https://github.com/SeleniumHQ/docker-selenium#quick-start
Run on Powershell:
docker run -d -p 4444:4444 -p 7900:7900 --shm-size=&amp;#34;2g&amp;#34; selenium/standalone-firefox:4.0.0-rc-2-20210930   After all, you can run your python script in GitBash</description>
    </item>
    
    <item>
      <title>Azure: Copy a blob from a tenant to another tenant account</title>
      <link>https://hoangmnsd.github.io/bk/azure-copy-blob-from-a-tenant-to-another/</link>
      <pubDate>Sat, 02 Oct 2021 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/azure-copy-blob-from-a-tenant-to-another/</guid>
      <description>1. Giới thiệu Việc copy 1 file từ storage account này sang 1 storage acccount khác tenant không hẳn là khó khăn, nhưng cũng đòi hỏi 1 chút chú ý để tránh mất thời gian
2. Yêu cầu  Dùng WSL Download AzCopy tool, refer: https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10  3. Cách làm 3.1. Copy a file from a tenant to another Đầu tiên cần nắm được syntax:
Copy a single blob to another blob by using a SAS token.</description>
    </item>
    
    <item>
      <title>Azure: Create AKS Cluster by ARM and ACI (using CNAB, porter.sh)</title>
      <link>https://hoangmnsd.github.io/bk/azure-create-akscluster-using-arm-aci-cnab-porter/</link>
      <pubDate>Tue, 10 Aug 2021 15:03:08 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/azure-create-akscluster-using-arm-aci-cnab-porter/</guid>
      <description>Bạn muốn deploy Azure AKS Cluster bằng ARM và Azure Container Instance, sau đó deploy helm chart lên AKS cluster đó.
1. Giới Thiệu CNAB là gì? https://cnab.io/
CNAB là Cloud Native Application Bundle. Nó được thiết kế để bundling, installing, managing các distributed app.
Nó được design bởi MS, Docker, Bitami, Hashicorp, Pivotal, codefresh.
1 CNAB bao gồm 3 thành phần: Application Image, Invocation Image, Bundle descriptor.
Tác dụng mà CNAB đem lại: Package toàn bộ app của bạn, ko cần cấu trúc phức tạp,&amp;hellip;</description>
    </item>
    
    <item>
      <title>Run docker command from Ubuntu Subsystem of Windows (WSL)</title>
      <link>https://hoangmnsd.github.io/bk/enable-docker-command-for-ubuntu-subsytem-wsl/</link>
      <pubDate>Mon, 02 Aug 2021 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/enable-docker-command-for-ubuntu-subsytem-wsl/</guid>
      <description>Giới thiệu Chắc các bạn hẳn đã từng gặp lỗi này khi dùng Ubuntu subsystem trên Windows:
 The command &amp;lsquo;docker&amp;rsquo; could not be found in this WSL1 distro. We recommend to convert this distro into WSL 2 and activate the WSL integration in Docker Desktop settings.
 Vậy cần làm gì để convert WSL 1 sang WSL 2?
Yêu cầu  Phải là Windows 10 Bật CMD, run winver để xem version Windows của bạn đang dùng là gì?</description>
    </item>
    
    <item>
      <title>Secure API Gateway by AWS Cognito User Pool (in ReactJS based Gatsby App)</title>
      <link>https://hoangmnsd.github.io/bk/secure-api-gateway-by-cognito-user-pool-gatsbyjs/</link>
      <pubDate>Sat, 31 Jul 2021 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/secure-api-gateway-by-cognito-user-pool-gatsbyjs/</guid>
      <description>Giới thiệu Bài này giải thích về cách secure API Gateway enpoint bằng cách dùng Cognito User Pool Authorizer.
Frontend trong bài này sử dụng Reacjs nhé.
API Gateway của AWS thì có 2 loại chia theo protocol: HTTP API và REST API (Bài này nói về REST API).
Yêu cầu Các bạn cần có base kiến thức về ReactJS 1 chút, biết làm thế nào để viết 1 component, export nó ra như nào, làm sao để apply authenticate vào Gatsby, cách viết 1 component, create pages, pass props qua các page, export page &amp;hellip;</description>
    </item>
    
    <item>
      <title>Integrate AWS Cognito to Gatsby Website</title>
      <link>https://hoangmnsd.github.io/bk/integrate-aws-cognito-to-gatsby-website/</link>
      <pubDate>Sun, 25 Jul 2021 16:40:11 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/integrate-aws-cognito-to-gatsby-website/</guid>
      <description>1. Giới thiệu Gần đây khi tìm hiểu về frontend thì mình biết rằng Hugo không thể cung cấp tính năng Authenticate cho website của mình. Vì bản thân Hugo là 1 Static Site Generator (SSG), nó ko có trách nhiệm biến website của bạn thành dynamic.
Tiếp tục tìm hiểu thì mình biết thêm về GatsbyJS, cũng là 1 Static Site Generator, nhưng nó based trên ReactJS và có nhiều plugin để biến trang web thành dynamic.</description>
    </item>
    
    <item>
      <title>Oracle Cloud: Signup and Enable MFA for Identity Cloud Account</title>
      <link>https://hoangmnsd.github.io/bk/oracle-cloud-signup-and-enable-mfa/</link>
      <pubDate>Thu, 24 Jun 2021 22:38:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/oracle-cloud-signup-and-enable-mfa/</guid>
      <description>Oracle có tiếng đã lâu nhưng Oracle Cloud thì mới được ra không lâu. Để cạnh tranh với các đối thủ thì Oracle Cloud cung cấp nhiều tính năng cho free-tier khá hấp dẫn.
So sánh với AWS chính trên trang chủ của mình luôn 🤣
Khá hấp dẫn đấy chứ. Nếu bạn chưa biết thì Google GCP cũng có chế độ free-tier ở đây: https://cloud.google.com/free
1. Sign Up Quá trình đăng ký thì bạn có thể vào đây https://signup.</description>
    </item>
    
    <item>
      <title>Lambda &#43; API Gateway, Telegram Bot and Serverless Webapp</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-lambda-apigw-telegram-bot-serverless-webapp/</link>
      <pubDate>Wed, 10 Mar 2021 00:43:59 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-lambda-apigw-telegram-bot-serverless-webapp/</guid>
      <description>Phần 1 mình sẽ nói về cách để tạo 1 Serverless Telegram bot dùng Lambda + API Gateway
Phần 2 mình sẽ nói về cách để trigger Lambda từ 1 Web Browser host trên S3 bucket dùng Ajax Jquery (cũng cần có API Gateway)
1. Sererless Telegram Bot using Lambda + API Gateway 1.1. Tạo Bot bằng cách chat với @BotFather Đăng nhập vào Telegram, tìm @BotFather và chat với nó để tạo bot của bạn.</description>
    </item>
    
    <item>
      <title>K8S 15: (on GKE Cluster) Setup Prometheus &#43; Grafana Operator by Helm</title>
      <link>https://hoangmnsd.github.io/bk/k8s-xv-on-gke-cluster-setup-prometheus-grafana-operator-by-helm/</link>
      <pubDate>Sat, 19 Sep 2020 16:05:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-xv-on-gke-cluster-setup-prometheus-grafana-operator-by-helm/</guid>
      <description>Làm theo bài K8S 9 để setup TLS DNS Cert Manager, cùng với đó setup 1 Java Maven App xong đã.
Bài K8S 9 sẽ cần set các biến như sau:
export PROJECT_ID=&amp;#34;your-project-id&amp;#34; export DOMAIN=&amp;#34;your-domain.net&amp;#34; export SUBDOMAIN=&amp;#34;your-subdomain.your-domain.net&amp;#34; export YOUR_EMAIL_ADDRESS=&amp;#34;your-email@gmail.com&amp;#34; # Cloud DNS service account nên là unique để tránh lỗi khi issue Certificate, nên mình cho thêm hậu tố `date` vào như sau:  export CLOUD_DNS_SA=&amp;#34;certmng-cdns-$(date +%d%m%Y-%H)&amp;#34; export SPRINGAPP_SUBDOMAIN=&amp;#34;springapp.your-subdomain.your-domain.net&amp;#34; export CLUSTER_NAME=&amp;#34;your-cluster-name&amp;#34; export TLS_SECRET_NAME=&amp;#34;echo-tls-secret-prod&amp;#34; kubectl annotate service nginx-ingress-controller &amp;#34;external-dns.</description>
    </item>
    
    <item>
      <title>Azure: Setup Auto Stop/Start on schedule for Virtual Machines</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-azure-setup-auto-stop-start-virtual-machines/</link>
      <pubDate>Mon, 31 Aug 2020 21:47:51 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-azure-setup-auto-stop-start-virtual-machines/</guid>
      <description>Nên sử dụng Automation service của Azure
Giả sử bạn đã tạo 1 Resource Group tên là: test-auto-startstop-vm
Trong Resource Group đó bạn có 2 VM như sau (ảnh): Chọn Resource Group mà bạn muốn apply stop/start solution vào, chọn Add (ảnh):
Search Automation (ảnh):
Chọn Create (ảnh):
Tạo Automation Account. Điền thông tin phù hợp với bạn và tiếp tục chọn Create (ảnh):
Quay lại portal của Resource Group bạn sẽ thấy có thêm các resource được tạo ra.</description>
    </item>
    
    <item>
      <title>K8S 14: (on GKE Cluster) Setup Sonarqube for Maven Project With GitlabCI</title>
      <link>https://hoangmnsd.github.io/bk/k8s-xiv-on-gke-cluster-setup-sonarqube-for-maven-project-with-gitlabci/</link>
      <pubDate>Sat, 08 Aug 2020 01:18:27 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-xiv-on-gke-cluster-setup-sonarqube-for-maven-project-with-gitlabci/</guid>
      <description>Giới thiệu Tưởng tượng rằng bạn đã có:
 GKE Cluster, dựng Gitlab Runner, Gitlab self-hosted (hoặc dùng gitlab.com). 1 java project (dùng Maven) trên Gitlab. Bạn muốn sử dụng Gitlab CI để tạo pipeline.  Bài này hướng dẫn cách setup 1 server Sonarqube để scan quality code cho 1 Java (Spring) project.
Kết thúc bài này sẽ có 1 flow kiểu như sau, project Java của bạn mỗi khi có 1 commit trên Gitlab sẽ:</description>
    </item>
    
    <item>
      <title>K8S 13: Using Gitlab CI on GKE Cluster - Push Docker Image to GCR for Continuous Integration (CI)</title>
      <link>https://hoangmnsd.github.io/bk/k8s-xiii-using-gitlab-ci-push-docker-image-to-gcr-on-gke/</link>
      <pubDate>Fri, 29 May 2020 23:44:53 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-xiii-using-gitlab-ci-push-docker-image-to-gcr-on-gke/</guid>
      <description>Giới thiệu Các bài trước thì mình đã nói đến CD (Continuous Deployment) rồi, giờ chuyển sang CI (Continuous Integration)
Nhắc đến tool về CI thì có nhiều, ví dụ như Jenkins, Travis CI, Circle CI, Gitlab CI,&amp;hellip; etc.
Hôm nay mình sẽ giới thiệu về Gitlab CI
Mục đích của tutorial này là:
Setup 1 project sample để có thể sử dụng Gitlab CI, push Docker image lên Google Container Registry (GCR).</description>
    </item>
    
    <item>
      <title>K8S 12: GitOps - Using Flux with private Gitlab server and GCR for Continuous Deployment (CD) on GKE Cluster</title>
      <link>https://hoangmnsd.github.io/bk/k8s-xii-gitops-using-flux-with-private-gitlab-server-with-gcr-for-cd/</link>
      <pubDate>Fri, 22 May 2020 22:55:35 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-xii-gitops-using-flux-with-private-gitlab-server-with-gcr-for-cd/</guid>
      <description>Giới thiệu Lần mò về GitOps thì thấy đây là 1 khái niệm rất hay và thú vị
Như các bạn thấy trên hình, Flux hoạt động như 1 operator sẽ đi scan 1 Git repository và 1 (hoặc nhiều) Docker registries.
Mỗi khi bạn commit 1 file yaml lên Git repository đó, Flux sẽ tự động deploy file đó vào k8s (Đây chính là GitOps). Nếu bạn thay đổi nội dung file yaml đó và commit tiếp, Flux cũng sẽ update resources tương ứng.</description>
    </item>
    
    <item>
      <title>K8S 11: Using Keel on GKE Cluster for Continuous Deployment (CD)</title>
      <link>https://hoangmnsd.github.io/bk/k8s-xi-using-keel-on-gke-cluster-for-continuous-deployment/</link>
      <pubDate>Sat, 09 May 2020 17:36:12 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-xi-using-keel-on-gke-cluster-for-continuous-deployment/</guid>
      <description>Giới thiệu  Keel is a tool for automating Kubernetes deployment updates. Keel is stateless, robust and lightweight.
 Keel được đánh giá là 1 tool dễ cài đặt, dễ sử dụng, và rất nhẹ.
Bài này chỉ đơn giản là mình muốn demo về cách sử dụng 1 tool lightweight được nhiều người giới thiệu (Keel) thôi. Ngoài ra còn 1 số tool khác cũng được suggest nhiều, đó là Weave Flux.</description>
    </item>
    
    <item>
      <title>Apply Staticman v3/v2 for Hugo blog Github to enable comment feature</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-apply-staticman-v3-for-hugo-blog-github-cmt-feature/</link>
      <pubDate>Sat, 28 Mar 2020 22:24:39 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-apply-staticman-v3-for-hugo-blog-github-cmt-feature/</guid>
      <description>Yêu Cầu Bạn đã có 1 Github Pages Blog dựng bằng Hugo, sử dụng theme Minimo hoặc những theme tương tự như Minimo
Giới thiệu Nếu bạn đang host 1 Hugo blog trên Github, hẳn bạn sẽ muốn người khác có thể comment trên blog của mình
Nhưng vì blog của bạn là static site. Nếu người khác có thể comment dc thì chẳng phải là dynamic site sao :v</description>
    </item>
    
    <item>
      <title>K8S 10: Setup Gitlab Self Hosted on GKE Cluster</title>
      <link>https://hoangmnsd.github.io/bk/k8s-x-setup-gitlab-on-gke-cluster/</link>
      <pubDate>Thu, 20 Feb 2020 12:28:58 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-x-setup-gitlab-on-gke-cluster/</guid>
      <description>Tạo Gitlab với yêu cầu là:
 disable MinIO, dùng GCS, disable cert-manager, dùng cert-manager mình tự tạo riêng, các config về resource của gitlab ở mức minimal, gitlab sẽ vào qua link gitlab.your-subdomain.your-domain.net và có HTTPS  Yêu Cầu  Đã tạo GKE Cluster có ít nhất là 3 vCPU Đã install Helm 2 Đã làm theo bài này để setup cert-manager:
K8S 9: Setup External DNS + Cert Manager + Nginx Ingress Controller Wilcard  Cách Làm 1.</description>
    </item>
    
    <item>
      <title>K8S 9: Setup External DNS &#43; Cert Manager &#43; Nginx Ingress Controller Wilcard</title>
      <link>https://hoangmnsd.github.io/bk/k8s-ix-setup-extdns-certmanager-nginxingress-wilcard/</link>
      <pubDate>Mon, 23 Dec 2019 14:02:41 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-ix-setup-extdns-certmanager-nginxingress-wilcard/</guid>
      <description>Yêu Cầu  Đã tạo GKE Cluster Đã mua 1 domain riêng, kiểu your-domain.net Đã setup service CloudDNS trong GCP console, để sử dụng dc your-domain.net:
  Cách Làm 0. Setup environment variables Các biến này sẽ dùng xuyên suốt trong bài:
export PROJECT_ID=&amp;#34;your-project-id&amp;#34; export DOMAIN=&amp;#34;your-domain.net&amp;#34; export SUBDOMAIN=&amp;#34;your-subdomain.your-domain.net&amp;#34; export YOUR_EMAIL_ADDRESS=&amp;#34;your-mail-address&amp;#34; # Cloud DNS service account nên là unique để tránh lỗi khi issue Certificate, nên mình cho thêm hậu tố `date` vào như sau:  export CLOUD_DNS_SA=&amp;#34;certmng-cdns-$(date +%d%m%Y-%H)&amp;#34; 1.</description>
    </item>
    
    <item>
      <title>K8S 8: Setup Advanced EFK Stack on GCP cluster (ElasticSearch, Fluentd, Kibana)</title>
      <link>https://hoangmnsd.github.io/bk/k8s-viii-setup-advanced-efk-stack-on-gcp/</link>
      <pubDate>Mon, 25 Nov 2019 12:42:17 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-viii-setup-advanced-efk-stack-on-gcp/</guid>
      <description>Giới thiệu Bài này hướng dẫn dựng EFK stack phức tạp hơn, dùng ConfigMap,
ElasticSearch chia làm các role &amp;ldquo;master, client, data&amp;rdquo;,
có áp dụng authentication cho Kibana để &amp;ldquo;more secure&amp;rdquo;
Cách làm Đầu tiên cần checkout source code này:
git clone https://github.com/hoangmnsd/kubernetes-series cd kubernetes-series/efk-stack-advanced 1. Tạo cluster Trên gcp thì tạo cluster bằng console, mình đã chọn loại N1 standard 2 (2vCPU,7.5GB memory), tạo cluster chứa 2 node như vậy</description>
    </item>
    
    <item>
      <title>K8S 7: Setup EFK Stack on EKS/GCP cluster (ElasticSearch, Fluentd, Kibana)</title>
      <link>https://hoangmnsd.github.io/bk/k8s-vii-setup-efk-stack-on-eks-gcp/</link>
      <pubDate>Sat, 23 Nov 2019 15:47:46 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-vii-setup-efk-stack-on-eks-gcp/</guid>
      <description>Yêu cầu Đã cài đặt eksctl, kubectl
Cách làm git clone https://github.com/hoangmnsd/kubernetes-series cd kubernetes-series/efk-stack 1. Tạo cluster 1.1. eks trên eks phải tạo cluster bằng file này cluster-efk.yaml
có thể đổi tên cluster, tạo thêm node, đổi type của node trong file đó, nhưng nên chọn 1 node có 4vCPU, &amp;gt;8GB (t2.xlarge), đã test trường hợp sử dụng t2.large (2 vCPU, 8 GB Mem) cũng ok
eksctl create cluster -f cluster-efk.</description>
    </item>
    
    <item>
      <title>K8S 6: Using Postgresql Run Outside Cluster (in Another Host Ec2)</title>
      <link>https://hoangmnsd.github.io/bk/k8s-vi-using-postgres-run-outside-cluster-in-another-host-ec2/</link>
      <pubDate>Thu, 21 Nov 2019 10:39:03 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-vi-using-postgres-run-outside-cluster-in-another-host-ec2/</guid>
      <description>If you delete the database pod all data is lost. We&amp;rsquo;ll fix this by using a database that lives externally to our cluster.
 Yêu cầu Workplace: Amazon EC2 Linux
Đã tạo môi trường, cluster của riêng bạn, có thể dùng eksctl tạo từ file cluster.yaml sau
apiVersion: eksctl.io/v1alpha5 kind: ClusterConfig metadata: name: base-project region: us-east-1 availabilityZones: [&amp;quot;us-east-1a&amp;quot;, &amp;quot;us-east-1d&amp;quot;] nodeGroups: - name: nodegrp-1 instanceType: t2.medium desiredCapacity: 1 ssh: # import public key from file publicKeyPath: /home/ec2-user/.</description>
    </item>
    
    <item>
      <title>K8S 5: Using Helm Chart With Kubectl</title>
      <link>https://hoangmnsd.github.io/bk/k8s-v-using-helm-chart-w-kubectl/</link>
      <pubDate>Tue, 19 Nov 2019 17:25:05 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-v-using-helm-chart-w-kubectl/</guid>
      <description>Giới thiệu Trước khi dùng helm, mình đã dùng kubectl để run app này ok:
https://github.com/hoangmnsd/kubernetes-series/tree/master/spring-maven-postgres-docker-k8s
tuy nhiên việc chạy riêng từng command kubectl apply -f … và việc quản lý version tập trung của kubectl bất tiện đã dẫn đến việc cần dùng Helm để quản lý kubernetes cluster
Vậy nên giờ mình sẽ cấu trúc lại folder https://github.com/hoangmnsd/kubernetes-series/tree/master/spring-maven-postgres-docker-k8s để sử dụng được Helm,
Sau khi cấu trúc lại thì kết quả cuối cùng là project này https://github.</description>
    </item>
    
    <item>
      <title>Hướng dẫn mua vé xem đá bóng ở Tokyo</title>
      <link>https://hoangmnsd.github.io/bk/review-buy-ticket-to-wach-football-match-tokyo/</link>
      <pubDate>Sun, 17 Nov 2019 22:36:35 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/review-buy-ticket-to-wach-football-match-tokyo/</guid>
      <description>Đầu tiên các bạn có thể check lịch thi đấu của các đội bóng ở livescore
(https://www.livescore.com/soccer/japan/j-league/)
ở hình trên mình thấy vào ngày 23/11/2019 FC Tokyo sẽ đá với FC Shonan trên sân nhà Ajinomoto Stadium
Mình cũng ở Tokyo, nên mình sẽ đi xem trận này
Có 2 cách để mua vé, 1 là các bạn đến ngày đó thì đi đến sân tìm quầy bán vé rồi vào mua và xem luôn (chú ý là giá vé sẽ thêm 300-400 yên), cách 2 là mua online, hôm nay mình sẽ mua online (mua online cũng có 2 hình thức, mua trên trang chủ của đội bóng, hoặc mua ở trang https://l-tike.</description>
    </item>
    
    <item>
      <title>K8S 4: App Micro Services on AWS with eksctl</title>
      <link>https://hoangmnsd.github.io/bk/k8s-iv-app-micro-services-on-aws-w-eksctl/</link>
      <pubDate>Fri, 15 Nov 2019 17:09:22 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-iv-app-micro-services-on-aws-w-eksctl/</guid>
      <description>Run Spring Boot + Postgresql App by Docker Compose/Kubernetes Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>K8S 3: Using eksctl on Amazon Linux EC2</title>
      <link>https://hoangmnsd.github.io/bk/k8s-iii-using-eksctl-on-amazon-linux/</link>
      <pubDate>Thu, 14 Nov 2019 17:16:22 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-iii-using-eksctl-on-amazon-linux/</guid>
      <description>Giới thiệu Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>K8S 2: How to Access K8s Dashboard On Aws Ec2 Ubuntu</title>
      <link>https://hoangmnsd.github.io/bk/k8s-ii-how-to-access-dashboard-on-aws-ec2-ubuntu/</link>
      <pubDate>Tue, 12 Nov 2019 00:15:50 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-ii-how-to-access-dashboard-on-aws-ec2-ubuntu/</guid>
      <description>Giới thiệu Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>K8S 1: App Micro Services on AWS with Minikube</title>
      <link>https://hoangmnsd.github.io/bk/k8s-i-app-micro-services-on-aws-w-minikube/</link>
      <pubDate>Fri, 11 Oct 2019 15:14:01 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/k8s-i-app-micro-services-on-aws-w-minikube/</guid>
      <description>Giới thiệu Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>Aws Certified Sysops Administrator Associate Note (SOA)</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-certified-sysops-administrator-associate-note-soa/</link>
      <pubDate>Sat, 07 Sep 2019 23:01:48 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-certified-sysops-administrator-associate-note-soa/</guid>
      <description>Các câu hỏi và câu trả lời được note lại trong quá trình học &amp;mdash;P1&amp;mdash;  Q. Cty của bạn có 1 VPC với vài ec2. App trên ec2 làm việc với IPv6. Cần ensure là ec2 này có thể init traffic ra Internet, nhưng ko cho connect từ internet vào instance. Làm nào?
 Dùng egress-only Internet gateway.
ko dùng NAT GW hay NAT instance vì cái đó dùng cho IP v4, IGW thì hiển nhiên ko dùng rồi.</description>
    </item>
    
    <item>
      <title>Send Message to Discord/Slack Using Aws Lambda</title>
      <link>https://hoangmnsd.github.io/bk/send-message-to-discord-slack-using-aws-lambda/</link>
      <pubDate>Wed, 04 Sep 2019 11:50:02 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/send-message-to-discord-slack-using-aws-lambda/</guid>
      <description>Bài này hướng dẫn tạo 1 function lambda start EC2 và gửi message về Discord/Slack.
Ngoài ra, dựa vào đó, các bạn có thể setting Cloudwatch rule để trigger Lambda function theo 1 Schedule mong muốn.
I. Discord 1. Yêu cầu Đang sử dụng hệ điều hành Window (MacOS cũng được, nhưng các bạn sẽ cần hiểu dc chỗ nào nên làm theo/ko làm theo)
2. Cách làm 2.1. Tạo bot trên discord Vào discord tạo server &amp;ldquo;Test&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Aws Lambda get Current Date Time Wrong</title>
      <link>https://hoangmnsd.github.io/bk/aws-lambda-get-current-date-time-wrong/</link>
      <pubDate>Tue, 27 Aug 2019 17:34:21 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/aws-lambda-get-current-date-time-wrong/</guid>
      <description>1. Mô tả Chia sẻ về 1 lỗi khi sử dụng AWS Lambda:
Mình dùng Lambda để get current timestamp, lambda này được trigger bởi Cloudwatch cứ 5 giây chạy 1 lần.
Mình phát hiện ra là lần đầu thì Lambda return kết quả đúng 2019-08-27 08:46:54.867900.
Nhưng sau đó 5 giây vào check log trong Cloudwatch thì thấy vẫn trả về timestamp cũ 2019-08-27 08:46:54.867900.
Cứ thế, dù 5 10 15 phút sau mình cứ chạy lại là log trả về timestamp cũ.</description>
    </item>
    
    <item>
      <title>Using Packer &#43; Ansible to Create Image</title>
      <link>https://hoangmnsd.github.io/bk/using-packer-ansible-to-create-image/</link>
      <pubDate>Thu, 15 Aug 2019 16:48:35 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/using-packer-ansible-to-create-image/</guid>
      <description>Yêu cầu Giả định là bạn đã có 1 tài khoản AWS rồi, có thể tạo được EC2
Có base kiến thức cơ bản về AWS, Linux biết cách SSH vào EC2
Cách làm 1. Tạo bộ AWS key cho Packer user Vào AWS IAM tạo user &amp;ldquo;packer&amp;rdquo; (hoặc bất cứ tên gì, ở đây mình lấy ảnh cũ chọn user &amp;ldquo;ansible&amp;rdquo;) cấp policy phù hợp (ví dụ chọn AdministratorAccess).</description>
    </item>
    
    <item>
      <title>Aws Certified Solution Architect Associate Note (SAA)</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-certified-solution-architect-associate-note-saa/</link>
      <pubDate>Tue, 06 Aug 2019 00:29:51 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-certified-solution-architect-associate-note-saa/</guid>
      <description>Các câu hỏi và câu trả lời được note lại trong quá trình học &amp;mdash;P1&amp;mdash;
 Q. 1 cty cần migrate 10TB data lên aws. Yêu cầu replica lag &amp;lt; 100 miliseconds, data có thể scale gấp 4? dùng cái RDS nào của amazon?
 aurora, có thể scale 64TB và keep replica lag dưới 100 milisec
 Q. &amp;ldquo;IOPS” stands for input/output operations per second=số lần đọc/ghi max trong 1 giây, &amp;ldquo;throughput&amp;rdquo; là dung lượng traffic 1 giây</description>
    </item>
    
    <item>
      <title>Secure API Gateway by Lambda Authorizer</title>
      <link>https://hoangmnsd.github.io/bk/secure-api-gateway-by-lambda-authorizer/</link>
      <pubDate>Mon, 29 Jul 2019 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/secure-api-gateway-by-lambda-authorizer/</guid>
      <description>Bài này sẽ giải thích cách Secure API Gateway bằng Lambda Authorizer đơn giản.
Nếu API không được secure thì bất cứ ai có API URL cũng có thể gửi request đến server và lấy được data trong DynamoDB của mình.
Nên cần phải setup Authorization cho API Gateway.
1. Tạo table trong DynamoDB Table name: authors
Primary key: id
Tạo vài item trong table authors
{ &amp;#34;firstName&amp;#34;: &amp;#34;Hoang&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;le-hoang&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;Le&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;linoel-messi&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;lionel&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;messi&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;jonesta-smaldini&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;jonesta&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;smaldini&amp;#34; }, { &amp;#34;firstName&amp;#34;: &amp;#34;Fred&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;fred&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;the-red&amp;#34; } 2.</description>
    </item>
    
    <item>
      <title>Aws Certified Developer Associate Note (CDA)</title>
      <link>https://hoangmnsd.github.io/bk/encrypt-aws-certified-developer-associate-note-cda/</link>
      <pubDate>Tue, 23 Jul 2019 09:09:48 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/encrypt-aws-certified-developer-associate-note-cda/</guid>
      <description>Các câu hỏi và câu trả lời được note lại trong quá trình học &amp;mdash;P1&amp;mdash;
 Q. 1 app đang stores session state in memory. Nên lưu nó ở đâu?
 Store session state in an ElastiCache cluster
 Q. 1 app cần phải monitor các event. cần capture số lượng user login, thời gian đỉnh điểm, period 10s. làm nào?
 Create a high-resolution custom Amazon CloudWatch metric
high-resolution metric: can specify a high-resolution alarm with a period of 10 seconds or 30 seconds, regular alarm with a period of any multiple of 60 seconds</description>
    </item>
    
    <item>
      <title>Ansible Demo Ansible Pull Galaxy Playbook</title>
      <link>https://hoangmnsd.github.io/bk/ansible-demo-ansible-pull-galaxy-playbook/</link>
      <pubDate>Wed, 03 Jul 2019 09:18:32 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/ansible-demo-ansible-pull-galaxy-playbook/</guid>
      <description>Demo về cách sử dụng Ansible
Yêu cầu Đã setup Ansible để master và client có thể connect được với nhau theo cách Dynamic Inventory trong link sau: Setup Ansible Dynamic Inventory Aws
Cách làm 1. Change owner of /etc/ansilbe cd /etc/ansible sudo chown -R ec2-user:ec2-user . 2. Tạo playbook define các role /etc/ansible/lamp.yml cd /etc/ansible nano /etc/ansible/lamp.yml Nội dung file /etc/ansible/lamp.yml như sau:
--- - hosts: all become: yes roles: - apache - php Ctr+X rồi Yes-Enter để save file</description>
    </item>
    
    <item>
      <title>Setup Ansible Dynamic Inventory Aws</title>
      <link>https://hoangmnsd.github.io/bk/setup-ansible-dynamic-inventory-aws/</link>
      <pubDate>Tue, 02 Jul 2019 22:33:24 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/setup-ansible-dynamic-inventory-aws/</guid>
      <description>Khi setup Ansible thì có 2 cách, 1 là dùng &amp;ldquo;Static inventory&amp;rdquo;, 2 là &amp;ldquo;Dynamic inventory&amp;rdquo;
Trên AWS thì nên sử dụng cách 2, đây là best practice của Ansible.
Bài này sẽ tập trung nói về cách 2, phần cuối sẽ nói về cách 1 (Cách 1 setup sẽ dễ hơn nhiều)
Yêu cầu Giả định là bạn đã có 1 tài khoản AWS rồi, có thể tạo được EC2</description>
    </item>
    
    <item>
      <title>Áp Dụng CircleCI Vào Github Blog</title>
      <link>https://hoangmnsd.github.io/bk/using-circleci-in-github-blog/</link>
      <pubDate>Mon, 24 Jun 2019 11:11:35 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/using-circleci-in-github-blog/</guid>
      <description>Yêu cầu Giả định là bạn đã có 1 Github Blog rồi, có thể tạo theo link sau:
Create a Gihub Blog by Hugo
Và bạn đã tạo trên github 2 repo là: username và username.github.io
Trong đó thì username là repo mà mình sẽ làm việc (viết post mới, sửa chức năng v..v)
Còn username.github.io là repo sẽ dc tự động generate ra code và phản ánh nội dung trang web trên đường link https://username.</description>
    </item>
    
    <item>
      <title>Tạo 1 Blog trên Github bằng Hugo</title>
      <link>https://hoangmnsd.github.io/bk/create-a-github-blog-by-hugo/</link>
      <pubDate>Tue, 18 Jun 2019 15:03:08 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/bk/create-a-github-blog-by-hugo/</guid>
      <description>Blog sẽ có dạng https://username.github.io/. Giả định là bạn đang dùng Windows, đã cài đặt Git Bash
1. Install Hugo bằng file exe cho Windows Về version của Hugo thì nên chọn version 0.55.6
Install trên Windows nên làm như link sau: https://discourse.gohugo.io/t/howto-install-hugo-on-windows/741
vào link sau: https://github.com/gohugoio/hugo/releases/tag/v0.55.6
download file hugo_0.55.6_Windows-64bit.zip về thư mục tùy ý, chẳng hạn &amp;ldquo;E:\Downloads&amp;quot;
giải nén ra sẽ có file hugo.exe
giả sử file hugo.exe trong đường dẫn sau: E:\Downloads\hugo_0.</description>
    </item>
    
  </channel>
</rss>
