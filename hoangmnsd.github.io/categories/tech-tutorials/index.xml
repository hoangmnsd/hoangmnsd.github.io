<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech-Tutorials on Hoang</title>
    <link>https://hoangmnsd.github.io/categories/tech-tutorials/</link>
    <description>Recent content in Tech-Tutorials on Hoang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 14 Mar 2023 22:58:56 +0700</lastBuildDate><atom:link href="https://hoangmnsd.github.io/categories/tech-tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Troubleshoot Azure Linux VM: Internet &amp; SSH Connections</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-troubleshoot-azure-linux-vm-internet-ssh-connections/</link>
      <pubDate>Tue, 14 Mar 2023 22:58:56 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-troubleshoot-azure-linux-vm-internet-ssh-connections/</guid>
      <description>1. Story Mới đây mình gặp 1 tình huống là tạo 1 VM (Ubuntu18.04-LTS) trên Azure cho Dev sử dụng, có toàn quyền sudo luôn.
Dev setup nhiều phần mềm, và sau 1 thời gian thì VM bị lỗi ko thể SSH vào được nữa.
ssh: port 22: Connection timed out Nói chung là sử dụng hàng Cloud thì xử lý những case kiểu này có tài liệu khá đầy đủ, vì Azure là 1 đơn vị cung cấp Cloud lớn.</description>
    </item>
    
    <item>
      <title>Setting up my environments Windows, Ubuntu</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-setting-up-my-environments/</link>
      <pubDate>Fri, 03 Mar 2023 21:56:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-setting-up-my-environments/</guid>
      <description>1. Create USB Boots Win10 1.1. Download windows 10 từ https://www.microsoft.com/software-download/windows10.
Bật F12 vì MS chỉ cho phép tải từ trình duyệt mobile.
1.2. Download Rufus từ https://rufus.ie/ Xong thì có thể eject USB và rút ra
2. Install Win10 from USB Boots 2.1. Cắm USB đã cài Win10 vào 2.2. Start/restart máy ấn liên tục F10 để vào Boots Menu screen
2.3. Chọn cái USB bên trên Vào màn hình cài Win, chọn Win 10 Pro - Accept terms.</description>
    </item>
    
    <item>
      <title>Integrate Telegram Bot With ChatGPT</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-integrate-telegram-bot-with-chatgpt/</link>
      <pubDate>Thu, 16 Feb 2023 23:37:13 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-integrate-telegram-bot-with-chatgpt/</guid>
      <description>1. Run trên máy local mình sẽ sử dụng repo này: https://github.com/acheong08/ChatGPT
Mình sẽ cần install python3 trước
python -m pip install --upgrade pip pip3 install --upgrade revChatGPT Get API Key: https://platform.openai.com/account/api-keys
(Bước này vì mình đã mua 1 account ChatGPT 250k có sẵn 18$ credit rồi nên lấy API key khá dễ)
API Key có dạng: sk-xxx
file basic-sample.py:
from revChatGPT.V3 import Chatbot chatbot = Chatbot(api_key=&amp;quot;sk-xxx&amp;quot;) response = chatbot.ask(&amp;quot;Hello&amp;quot;) print(&amp;quot;ChatGPT: &amp;quot; + response) Run: python3 basic-sample.</description>
    </item>
    
    <item>
      <title>Oracle Cloud Infrastructure CLI scripts</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-oracle-oci-cli-script/</link>
      <pubDate>Fri, 20 Jan 2023 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-oracle-oci-cli-script/</guid>
      <description>Story Gần đây sau khi tạo account Oracle mới (region Singapore), mình gặp khó khăn khi ko thể tạo VM được vì lỗi: Error: 500-InternalError, Out of host capacity.
Mỗi region chỉ có 1 số lượng có hạn các VM CPU và RAM thôi, nên nếu ai hên thì mới tạo được VM. Nếu cứ lúc nào nghĩ đến mới vào tạo thì sẽ chẳng bao giờ cạnh tranh được.</description>
    </item>
    
    <item>
      <title>Install Minikube on Linux Ubuntu arm64 (not amd64)</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-install-minikube-on-linux-ubuntu-arm64-not-amd64/</link>
      <pubDate>Tue, 13 Dec 2022 20:42:58 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-install-minikube-on-linux-ubuntu-arm64-not-amd64/</guid>
      <description>1. Story Vì sự khác biệt CPU arhchitecture có thể dẫn đến lỗi nếu bạn cài đặt phần mềm ko tương thích.
Mình có cơ hội sử dụng cả 2 loại amd64 và arm64, gặp nhiều lỗi khi làm theo các tut trên mạng nên phải viết bài này.
Check CPU architecture của máy bạn đang sử dụng:
dpkg --print-architecture kết quả có thể ra arm64 hoặc amd64, tùy theo đó mà chọn các package phù hợp để install</description>
    </item>
    
    <item>
      <title>Connect Home Assistant to Amazon Alexa Echo Dot4</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-connect-home-assistant-to-alexa-echo-dot4/</link>
      <pubDate>Fri, 25 Nov 2022 23:09:57 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-connect-home-assistant-to-alexa-echo-dot4/</guid>
      <description>1. Setup Alexa connect to Home Assistant Làm theo hướng dẫn ở đây:
https://www.home-assistant.io/integrations/alexa.smart_home/
1.1. Setup Trên AWS Console create Role for Lambda:
Trên Alexa developer page, create skill:
Trên AWS Console Lambda, tạo function, nên chọn us-east-1 vì các region khác dễ bị lỗi lắm:
Set trigger to Alexa:
Upload code from Github:
Setup Environment variables:
Update home assistant file configuration.yml:
Create long live token để test tý nữa:</description>
    </item>
    
    <item>
      <title>Dockerize ReactJS/GatsbyJS app and Run it in Dev environment &#43; good practices</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-dockerize-reactjs-gatsby-app-good-practices/</link>
      <pubDate>Sat, 22 Oct 2022 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-dockerize-reactjs-gatsby-app-good-practices/</guid>
      <description>1. Story Mình có 1 static site tạo ra bằng GatsbyJS (1 framework base trên ReactJS) đã lâu, cách đây khoảng 1 năm:
https://github.com/hoangmnsd/hoangmnsd-the404blog-theme.git
Giờ đổi máy muốn tiếp tục quay lại phát triển app đó. Nhưng laptop yếu quá ko thể npm install nổi.
-&amp;gt; Mình chuyển hướng sang deploy app đó trên 1 server riêng như RasberryPi, nhưng lại dính đến network bandwidth quá chậm, npm install rất tốn thời gian.</description>
    </item>
    
    <item>
      <title>Performance Tests with Locust</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-performance-tests-note-locust/</link>
      <pubDate>Thu, 29 Sep 2022 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-performance-tests-note-locust/</guid>
      <description>1. Giải thích các khái niệm 1 cách ngắn gọn Performance test ko phải là 1 kiểu test cụ thể nào, nó là 1 khái niệm chung cho tất cả các kiểu test nhằm validate performance và xác định performance issues.
Load test là 1 kiểu test để validate xem application của bạn có thỏa mãn các goals đã đc define từ trước hay ko? Khi xây dựng app thì bạn phải define rằng app này sẽ cho phép bao nhiêu CCU?</description>
    </item>
    
    <item>
      <title>Connect Home Assistant to Broadlink Rm4 Mini</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-connect-home-assistant-to-broadlink-rm4-mini/</link>
      <pubDate>Sun, 14 Aug 2022 18:19:25 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-connect-home-assistant-to-broadlink-rm4-mini/</guid>
      <description>1. Story Nếu như nhà bạn có 1 chiếc điều hòa bình thường (ko phải loại smart), bạn sẽ phải điều khiển nó thông qua 1 cái điều khiển (remote) riêng.
Rồi có TV bạn lại có 1 remote cho nó. Nếu có thêm 1 chiếc quạt cây, chắc bạn cũng sẽ có remote dành riêng cho nó. Rồi nếu có thêm cái quạt trần, bạn lại có thêm 1 cái remote cho nó.</description>
    </item>
    
    <item>
      <title>Azure Synapse: Analyze data with serverless SQL and visualize it on PowerBI</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-azure-synapse-basic-data-flow-analyze-visualize-on-powerbi/</link>
      <pubDate>Fri, 24 Jun 2022 23:36:48 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-azure-synapse-basic-data-flow-analyze-visualize-on-powerbi/</guid>
      <description>This post is about a demo using Azure Synapse Analytics. Analyze data with serverless SQL, then visualize on Power BI desktop
Overview about Azure Synapse Analytics Azure Synapse contains the same Data Integration engine and experiences as Azure Data Factory, allowing you to create rich at-scale ETL pipelines without leaving Azure Synapse Analytics.
 Ingest data from 90+ data sources Code-Free ETL with Data flow activities Orchestrate notebooks, Spark jobs, stored procedures, SQL scripts, and more  Synapse SQL: is the ability to do T-SQL based analytics in Synapse workspace.</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 3) - Https</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-setup-home-assistant-on-raspberry-pi-p3-https/</link>
      <pubDate>Wed, 18 May 2022 23:04:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-setup-home-assistant-on-raspberry-pi-p3-https/</guid>
      <description>Đây là phần tiếp theo bài này: Setup Home Assistant on Raspberry Pi (Part 2) - DMZ and iptables rule)
1. Access from external network Đọc kỹ bài sau để biết về các parameter có thể sử dụng: https://github.com/linuxserver/docker-swag
Trước đó hãy chắc chắn mình đã mở port 80,443 trên iptables DOCKER-USER Chain nhé
sudo iptables -L -v -n | more Chain DOCKER-USER (1 references) pkts bytes target prot opt in out source destination 67922 4074K ACCEPT tcp -- wlan0 * 0.</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 2) - iptables rule and DMZ</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-setup-home-assistant-on-raspberry-pi-p2-dmz/</link>
      <pubDate>Sun, 15 May 2022 18:34:01 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-setup-home-assistant-on-raspberry-pi-p2-dmz/</guid>
      <description>Đây là phần cố gắng giải quyết vấn đề khi mình làm cái này: 9. Install DuckDNS (for expose outside access purpose)
Tóm tắt tình huống của mình: Có 1 RPi, chạy HASS trên docker. DÙng mạng VNPT, ko thể Port Forwarding được port 443 (do router đã reserve port 443, 80).
-&amp;gt; Phải dùng chức năng DMZ - cho RPi vào DMZ, nhưng chức năng này lại mở all port (bao gồm cả 443) trên con RPi (risk về security)</description>
    </item>
    
    <item>
      <title>Connect Home Assistant to LG thinQ Washer</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-connect-home-assistant-to-lg-thinq-washer/</link>
      <pubDate>Sat, 07 May 2022 10:24:37 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-connect-home-assistant-to-lg-thinq-washer/</guid>
      <description>Bài này hướng dẫn các integrate Máy giặt LG ThinQ FV1409S4W đến Home Assistant Container
Các bước setup Tải app LG ThinQ về, đăng ký account độc lập LG ThinQ, chú ý là ko đăng ký bằng Social Network account như (Google, Facebook or Amazon).
Sau đó làm theo các hướng dẫn trên LG ThinQ App để add/kết nối với máy giặt.
Chú ý sau khi bật nút Power trên máy giặt.</description>
    </item>
    
    <item>
      <title>Connect Home Assistant Container to Xiaomi Air Purifier3H</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-connect-home-assistant-to-air-purifier3h/</link>
      <pubDate>Sun, 01 May 2022 22:52:01 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-connect-home-assistant-to-air-purifier3h/</guid>
      <description>Làm theo 1 số hướng dẫn trên mạng để Connect Mi Air Purifier 3H đến HASS thường bị lỗi:
platform: xiaomi_miio ko còn được HASS support, timeout khi connect. Cuối cùng mình đã tìm được cách để làm được. Đó là dùng custom component của Github này: https://github.com/syssi/xiaomi_airpurifier/custom_components/
Tuy nhiên sau khoảng 3 tháng sử dụng, mình thấy trình độ tăng lên,
mình phát hiện ra có 1 lỗi là ko thể setup được LED Brightness.</description>
    </item>
    
    <item>
      <title>Setup Home Assistant on Raspberry Pi (Part 1) - Addons</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-setup-home-assistant-on-raspberry-pi-and-addons/</link>
      <pubDate>Sun, 01 May 2022 14:20:21 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-setup-home-assistant-on-raspberry-pi-and-addons/</guid>
      <description>Bài này tổng hợp các step gần như từ đầu đến cuối để setup Hệ thống Home Assistant Container trên Raspberry Pi
1. Install Docker &amp;amp; Docker Compose sudo apt-get update sudo apt-get upgrade -y sudo apt-get install avahi-daemon sudo apt install git -y sudo apt update sudo apt full-upgrade curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.sh sudo usermod -aG docker ${USER} reboot to apply: sudo shutdown -r now docker version docker info docker run hello-world # install pip3 sudo apt-get install libffi-dev libssl-dev sudo apt install python3-dev -y sudo apt-get install -y python3 python3-pip sudo shutdown -r now # Cách 1 install docker-compose default sudo shutdown -r now sudo su pip3 install docker-compose docker-compose version sudo systemctl enable docker # Cách 2 khác để install docker-compose specific version # Cần biết OS của bạn là gì đã: uname -s # giả output là linux uname -m # giả sử output là aarch64 # Vào trang này lấy link: https://github.</description>
    </item>
    
    <item>
      <title>Simple Demo: Data transfer between Raspberry Pi and AWS IoT Core</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-simple-demo-data-transfer-between-raspberry-and-aws-iotcore/</link>
      <pubDate>Mon, 11 Apr 2022 14:13:16 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-simple-demo-data-transfer-between-raspberry-and-aws-iotcore/</guid>
      <description>1. Cách làm 1.1. Trên AWS IoT Core, tạo things Go to Manage -&amp;gt; Thing -&amp;gt; Create single thing
Note to select Auto-generate a new certificate (Recommended)
Download all 5 files (Certificate and Key)
Đổi tên các file đó cho dễ nhớ, rồi dùng WinSCP để transfer 5 file đó lên RPi của bạn
1.2. Trên AWS IoT Core, tạo policy Goto Secure -&amp;gt; Policies -&amp;gt; Create Policy
điền như hình sau:</description>
    </item>
    
    <item>
      <title>Raspberry Pi: Setup auto connect wifi at first boots for Ubuntu OS, Raspian OS</title>
      <link>https://hoangmnsd.github.io/posts/setup-auto-connect-wifi-raspberrypi-ubuntu-raspian-os/</link>
      <pubDate>Sat, 26 Mar 2022 23:42:35 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/setup-auto-connect-wifi-raspberrypi-ubuntu-raspian-os/</guid>
      <description>Mày mò vọc vạch về Raspberry Pi 4B/8GB 1 chút.
Vấn đề Ban đầu mình muốn connect wifi cho RPi thì phải flash OS vào thẻ microSD, cắm bàn phím, màn hình, rồi cắm dây nguồn.
Sau đó vào sửa 1 số file config để connect wifi. Điều này khiến mình thấy loằng ngoằng và tốn thời gian.
Mục tiêu Với nhu cầu bản thân chỉ cần remote từ laptop SSH vào RPi (via Putty), ko cần RPi có desktop.</description>
    </item>
    
    <item>
      <title>Git - Difference between Rebase and Merge</title>
      <link>https://hoangmnsd.github.io/posts/git-different-rebase-merge/</link>
      <pubDate>Mon, 03 Jan 2022 23:43:28 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/git-different-rebase-merge/</guid>
      <description>Câu hỏi về So sánh git rebase và git merge đôi khi được hỏi trong phỏng vấn. Bạn nên nắm được sự khác nhau để tự tin hơn khi trả lời.
1. Intro Đôi khi chúng ta thấy các Developer dùng git rebase để merge/lấy các thay đổi từ nhánh khác về.
Nhưng chỉ nên dùng git rebase trên 1 nhánh của riêng bạn (hoặc chỉ mình bạn làm việc trên nhánh đó),</description>
    </item>
    
    <item>
      <title>Amateur tutor Git commands (rebase interactive, stash, reset)</title>
      <link>https://hoangmnsd.github.io/posts/git-tutor-rebase-stash-reset/</link>
      <pubDate>Fri, 05 Nov 2021 23:43:28 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/git-tutor-rebase-stash-reset/</guid>
      <description>Khi sử dụng Git dần dần trở nên thường xuyên thì việc hiểu về các câu lệnh nâng cao của nó càng trở nên cần thiết.
Sử dụng nhiều thì dẫn đến commit nhiều, commit nhiều thì việc commit sai file, commit sai message là chuyện dễ hiểu.
Từ đó dẫn đến nhu cầu sửa lại commit message, commit sai muốn revert lại commit trước đó, gộp các commit lại cho dễ nhìn, cho trace log trong tương lai, và &amp;hellip; nhìn log commit cho đẹp.</description>
    </item>
    
    <item>
      <title>GitOps: Playaround with ArgoCD and private Gitlab CI, ACR</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-playaround-w-argocd-and-private-gitlab-ci-acr/</link>
      <pubDate>Mon, 01 Nov 2021 21:16:47 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-playaround-w-argocd-and-private-gitlab-ci-acr/</guid>
      <description>1. Intro Demo about ArgoCD with private Gitlab CI repository, private ACR 2. Prerequisites  Basic knowledge about Azure, ssh-keygen, K8S, Gitlab, Docker commands Workspace: run commands on Azure Cloudshell Prepare an AKS cluster (Standard_DS2_v2, kubernetes version 1.21.2) Prepare an ACR (Azure container registry) with credential  export ACR_SERVER=&amp;#34;YOUR_ACR_NAME.azurecr.io&amp;#34; export ACR_USER=&amp;#34;YOUR_ACR_USER_NAME&amp;#34; export ACR_PASSWORD=&amp;#34;YOUR_ACR_PASSWORD&amp;#34; Clone 2 projects to your workspace:
 https://gitlab.com/argocd-demo2801/gitops-chart https://gitlab.com/argocd-demo2801/webapp  3. Setup 3.1. Config on Webapp repository https://gitlab.</description>
    </item>
    
    <item>
      <title>Azure: How to change private IP of VM, Vnet, Subnet, Load balancer</title>
      <link>https://hoangmnsd.github.io/posts/azure-update-private-ip-vnet-subnet-vm-loadbalancer/</link>
      <pubDate>Sat, 30 Oct 2021 15:24:42 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/azure-update-private-ip-vnet-subnet-vm-loadbalancer/</guid>
      <description>You cannot move a VM from a Vnet/subnet to different Vnet/subnet without re-creating the VM. But in some specific cases, you may not have to move VM to another Vnet/subnet, it will be easier when you just change the private IP of Vnet/subnet/VM/Load balancer&amp;hellip;
Background Assume that you&amp;rsquo;re having a Virtual machine with private IP is: 10.20.1.8 and you want to change it to: 10.25.2.9.
See this picture:
Note that this article is not about moving VM to a different Vnet/Subnet.</description>
    </item>
    
    <item>
      <title>Azure: Copy a blob from a tenant to another tenant account</title>
      <link>https://hoangmnsd.github.io/posts/azure-copy-blob-from-a-tenant-to-another/</link>
      <pubDate>Sat, 02 Oct 2021 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/azure-copy-blob-from-a-tenant-to-another/</guid>
      <description>1. Giới thiệu Việc copy 1 file từ storage account này sang 1 storage acccount khác tenant không hẳn là khó khăn, nhưng cũng đòi hỏi 1 chút chú ý để tránh mất thời gian
2. Yêu cầu  Dùng WSL Download AzCopy tool, refer: https://docs.microsoft.com/en-us/azure/storage/common/storage-use-azcopy-v10  3. Cách làm 3.1. Copy a file from a tenant to another Đầu tiên cần nắm được syntax:
Copy a single blob to another blob by using a SAS token.</description>
    </item>
    
    <item>
      <title>Azure: Create AKS Cluster by ARM and ACI (using CNAB, porter.sh)</title>
      <link>https://hoangmnsd.github.io/posts/azure-create-akscluster-using-arm-aci-cnab-porter/</link>
      <pubDate>Tue, 10 Aug 2021 15:03:08 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/azure-create-akscluster-using-arm-aci-cnab-porter/</guid>
      <description>Bạn muốn deploy Azure AKS Cluster bằng ARM và Azure Container Instance, sau đó deploy helm chart lên AKS cluster đó.
1. Giới Thiệu CNAB là gì? https://cnab.io/
CNAB là Cloud Native Application Bundle. Nó được thiết kế để bundling, installing, managing các distributed app.
Nó được design bởi MS, Docker, Bitami, Hashicorp, Pivotal, codefresh.
1 CNAB bao gồm 3 thành phần: Application Image, Invocation Image, Bundle descriptor.
Tác dụng mà CNAB đem lại: Package toàn bộ app của bạn, ko cần cấu trúc phức tạp,&amp;hellip;</description>
    </item>
    
    <item>
      <title>Secure API Gateway by AWS Cognito User Pool (in ReactJS based Gatsby App)</title>
      <link>https://hoangmnsd.github.io/posts/secure-api-gateway-by-cognito-user-pool-gatsbyjs/</link>
      <pubDate>Sat, 31 Jul 2021 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/secure-api-gateway-by-cognito-user-pool-gatsbyjs/</guid>
      <description>Giới thiệu Bài này giải thích về cách secure API Gateway enpoint bằng cách dùng Cognito User Pool Authorizer.
Frontend trong bài này sử dụng Reacjs nhé.
API Gateway của AWS thì có 2 loại chia theo protocol: HTTP API và REST API (Bài này nói về REST API).
Yêu cầu Các bạn cần có base kiến thức về ReactJS 1 chút, biết làm thế nào để viết 1 component, export nó ra như nào, làm sao để apply authenticate vào Gatsby, cách viết 1 component, create pages, pass props qua các page, export page &amp;hellip;</description>
    </item>
    
    <item>
      <title>Integrate AWS Cognito to Gatsby Website</title>
      <link>https://hoangmnsd.github.io/posts/integrate-aws-cognito-to-gatsby-website/</link>
      <pubDate>Sun, 25 Jul 2021 16:40:11 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/integrate-aws-cognito-to-gatsby-website/</guid>
      <description>1. Giới thiệu Gần đây khi tìm hiểu về frontend thì mình biết rằng Hugo không thể cung cấp tính năng Authenticate cho website của mình. Vì bản thân Hugo là 1 Static Site Generator (SSG), nó ko có trách nhiệm biến website của bạn thành dynamic.
Tiếp tục tìm hiểu thì mình biết thêm về GatsbyJS, cũng là 1 Static Site Generator, nhưng nó based trên ReactJS và có nhiều plugin để biến trang web thành dynamic.</description>
    </item>
    
    <item>
      <title>Oracle Cloud: Signup and Enable MFA for Identity Cloud Account</title>
      <link>https://hoangmnsd.github.io/posts/oracle-cloud-signup-and-enable-mfa/</link>
      <pubDate>Thu, 24 Jun 2021 22:38:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/oracle-cloud-signup-and-enable-mfa/</guid>
      <description>Oracle có tiếng đã lâu nhưng Oracle Cloud thì mới được ra không lâu. Để cạnh tranh với các đối thủ thì Oracle Cloud cung cấp nhiều tính năng cho free-tier khá hấp dẫn.
So sánh với AWS chính trên trang chủ của mình luôn 🤣
Khá hấp dẫn đấy chứ. Nếu bạn chưa biết thì Google GCP cũng có chế độ free-tier ở đây: https://cloud.google.com/free
1. Sign Up Quá trình đăng ký thì bạn có thể vào đây https://signup.</description>
    </item>
    
    <item>
      <title>Lambda &#43; API Gateway, Telegram Bot and Serverless Webapp</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-lambda-apigw-telegram-bot-serverless-webapp/</link>
      <pubDate>Wed, 10 Mar 2021 00:43:59 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-lambda-apigw-telegram-bot-serverless-webapp/</guid>
      <description>Phần 1 mình sẽ nói về cách để tạo 1 Serverless Telegram bot dùng Lambda + API Gateway
Phần 2 mình sẽ nói về cách để trigger Lambda từ 1 Web Browser host trên S3 bucket dùng Ajax Jquery (cũng cần có API Gateway)
1. Sererless Telegram Bot using Lambda + API Gateway 1.1. Tạo Bot bằng cách chat với @BotFather Đăng nhập vào Telegram, tìm @BotFather và chat với nó để tạo bot của bạn.</description>
    </item>
    
    <item>
      <title>Azure: Setup Auto Stop/Start on schedule for Virtual Machines</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-azure-setup-auto-stop-start-virtual-machines/</link>
      <pubDate>Mon, 31 Aug 2020 21:47:51 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-azure-setup-auto-stop-start-virtual-machines/</guid>
      <description>Nên sử dụng Automation service của Azure
Giả sử bạn đã tạo 1 Resource Group tên là: test-auto-startstop-vm
Trong Resource Group đó bạn có 2 VM như sau (ảnh): Chọn Resource Group mà bạn muốn apply stop/start solution vào, chọn Add (ảnh):
Search Automation (ảnh):
Chọn Create (ảnh):
Tạo Automation Account. Điền thông tin phù hợp với bạn và tiếp tục chọn Create (ảnh):
Quay lại portal của Resource Group bạn sẽ thấy có thêm các resource được tạo ra.</description>
    </item>
    
    <item>
      <title>K8S 14: (on GKE Cluster) Setup Sonarqube for Maven Project With GitlabCI</title>
      <link>https://hoangmnsd.github.io/posts/k8s-xiv-on-gke-cluster-setup-sonarqube-for-maven-project-with-gitlabci/</link>
      <pubDate>Sat, 08 Aug 2020 01:18:27 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-xiv-on-gke-cluster-setup-sonarqube-for-maven-project-with-gitlabci/</guid>
      <description>Giới thiệu Tưởng tượng rằng bạn đã có:
 GKE Cluster, dựng Gitlab Runner, Gitlab self-hosted (hoặc dùng gitlab.com). 1 java project (dùng Maven) trên Gitlab. Bạn muốn sử dụng Gitlab CI để tạo pipeline.  Bài này hướng dẫn cách setup 1 server Sonarqube để scan quality code cho 1 Java (Spring) project.
Kết thúc bài này sẽ có 1 flow kiểu như sau, project Java của bạn mỗi khi có 1 commit trên Gitlab sẽ:</description>
    </item>
    
    <item>
      <title>K8S 13: Using Gitlab CI on GKE Cluster - Push Docker Image to GCR for Continuous Integration (CI)</title>
      <link>https://hoangmnsd.github.io/posts/k8s-xiii-using-gitlab-ci-push-docker-image-to-gcr-on-gke/</link>
      <pubDate>Fri, 29 May 2020 23:44:53 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-xiii-using-gitlab-ci-push-docker-image-to-gcr-on-gke/</guid>
      <description>Giới thiệu Các bài trước thì mình đã nói đến CD (Continuous Deployment) rồi, giờ chuyển sang CI (Continuous Integration)
Nhắc đến tool về CI thì có nhiều, ví dụ như Jenkins, Travis CI, Circle CI, Gitlab CI,&amp;hellip; etc.
Hôm nay mình sẽ giới thiệu về Gitlab CI
Mục đích của tutorial này là:
Setup 1 project sample để có thể sử dụng Gitlab CI, push Docker image lên Google Container Registry (GCR).</description>
    </item>
    
    <item>
      <title>K8S 12: GitOps - Using Flux with private Gitlab server and GCR for Continuous Deployment (CD) on GKE Cluster</title>
      <link>https://hoangmnsd.github.io/posts/k8s-xii-gitops-using-flux-with-private-gitlab-server-with-gcr-for-cd/</link>
      <pubDate>Fri, 22 May 2020 22:55:35 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-xii-gitops-using-flux-with-private-gitlab-server-with-gcr-for-cd/</guid>
      <description>Giới thiệu Lần mò về GitOps thì thấy đây là 1 khái niệm rất hay và thú vị
Như các bạn thấy trên hình, Flux hoạt động như 1 operator sẽ đi scan 1 Git repository và 1 (hoặc nhiều) Docker registries.
Mỗi khi bạn commit 1 file yaml lên Git repository đó, Flux sẽ tự động deploy file đó vào k8s (Đây chính là GitOps). Nếu bạn thay đổi nội dung file yaml đó và commit tiếp, Flux cũng sẽ update resources tương ứng.</description>
    </item>
    
    <item>
      <title>K8S 11: Using Keel on GKE Cluster for Continuous Deployment (CD)</title>
      <link>https://hoangmnsd.github.io/posts/k8s-xi-using-keel-on-gke-cluster-for-continuous-deployment/</link>
      <pubDate>Sat, 09 May 2020 17:36:12 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-xi-using-keel-on-gke-cluster-for-continuous-deployment/</guid>
      <description>Giới thiệu  Keel is a tool for automating Kubernetes deployment updates. Keel is stateless, robust and lightweight.
 Keel được đánh giá là 1 tool dễ cài đặt, dễ sử dụng, và rất nhẹ.
Bài này chỉ đơn giản là mình muốn demo về cách sử dụng 1 tool lightweight được nhiều người giới thiệu (Keel) thôi. Ngoài ra còn 1 số tool khác cũng được suggest nhiều, đó là Weave Flux.</description>
    </item>
    
    <item>
      <title>Apply Staticman v3/v2 for Hugo blog Github to enable comment feature</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-apply-staticman-v3-for-hugo-blog-github-cmt-feature/</link>
      <pubDate>Sat, 28 Mar 2020 22:24:39 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-apply-staticman-v3-for-hugo-blog-github-cmt-feature/</guid>
      <description>Yêu Cầu Bạn đã có 1 Github Pages Blog dựng bằng Hugo, sử dụng theme Minimo hoặc những theme tương tự như Minimo
Giới thiệu Nếu bạn đang host 1 Hugo blog trên Github, hẳn bạn sẽ muốn người khác có thể comment trên blog của mình
Nhưng vì blog của bạn là static site. Nếu người khác có thể comment dc thì chẳng phải là dynamic site sao :v</description>
    </item>
    
    <item>
      <title>K8S 10: Setup Gitlab Self Hosted on GKE Cluster</title>
      <link>https://hoangmnsd.github.io/posts/k8s-x-setup-gitlab-on-gke-cluster/</link>
      <pubDate>Thu, 20 Feb 2020 12:28:58 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-x-setup-gitlab-on-gke-cluster/</guid>
      <description>Tạo Gitlab với yêu cầu là:
 disable MinIO, dùng GCS, disable cert-manager, dùng cert-manager mình tự tạo riêng, các config về resource của gitlab ở mức minimal, gitlab sẽ vào qua link gitlab.your-subdomain.your-domain.net và có HTTPS  Yêu Cầu  Đã tạo GKE Cluster có ít nhất là 3 vCPU Đã install Helm 2 Đã làm theo bài này để setup cert-manager:
K8S 9: Setup External DNS + Cert Manager + Nginx Ingress Controller Wilcard  Cách Làm 1.</description>
    </item>
    
    <item>
      <title>K8S 9: Setup External DNS &#43; Cert Manager &#43; Nginx Ingress Controller Wilcard</title>
      <link>https://hoangmnsd.github.io/posts/k8s-ix-setup-extdns-certmanager-nginxingress-wilcard/</link>
      <pubDate>Mon, 23 Dec 2019 14:02:41 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-ix-setup-extdns-certmanager-nginxingress-wilcard/</guid>
      <description>Yêu Cầu  Đã tạo GKE Cluster Đã mua 1 domain riêng, kiểu your-domain.net Đã setup service CloudDNS trong GCP console, để sử dụng dc your-domain.net:
  Cách Làm 0. Setup environment variables Các biến này sẽ dùng xuyên suốt trong bài:
export PROJECT_ID=&amp;#34;your-project-id&amp;#34; export DOMAIN=&amp;#34;your-domain.net&amp;#34; export SUBDOMAIN=&amp;#34;your-subdomain.your-domain.net&amp;#34; export YOUR_EMAIL_ADDRESS=&amp;#34;your-mail-address&amp;#34; # Cloud DNS service account nên là unique để tránh lỗi khi issue Certificate, nên mình cho thêm hậu tố `date` vào như sau:  export CLOUD_DNS_SA=&amp;#34;certmng-cdns-$(date +%d%m%Y-%H)&amp;#34; 1.</description>
    </item>
    
    <item>
      <title>K8S 8: Setup Advanced EFK Stack on GCP cluster (ElasticSearch, Fluentd, Kibana)</title>
      <link>https://hoangmnsd.github.io/posts/k8s-viii-setup-advanced-efk-stack-on-gcp/</link>
      <pubDate>Mon, 25 Nov 2019 12:42:17 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-viii-setup-advanced-efk-stack-on-gcp/</guid>
      <description>Giới thiệu Bài này hướng dẫn dựng EFK stack phức tạp hơn, dùng ConfigMap,
ElasticSearch chia làm các role &amp;ldquo;master, client, data&amp;rdquo;,
có áp dụng authentication cho Kibana để &amp;ldquo;more secure&amp;rdquo;
Cách làm Đầu tiên cần checkout source code này:
git clone https://github.com/hoangmnsd/kubernetes-series cd kubernetes-series/efk-stack-advanced 1. Tạo cluster Trên gcp thì tạo cluster bằng console, mình đã chọn loại N1 standard 2 (2vCPU,7.5GB memory), tạo cluster chứa 2 node như vậy</description>
    </item>
    
    <item>
      <title>K8S 7: Setup EFK Stack on EKS/GCP cluster (ElasticSearch, Fluentd, Kibana)</title>
      <link>https://hoangmnsd.github.io/posts/k8s-vii-setup-efk-stack-on-eks-gcp/</link>
      <pubDate>Sat, 23 Nov 2019 15:47:46 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-vii-setup-efk-stack-on-eks-gcp/</guid>
      <description>Yêu cầu Đã cài đặt eksctl, kubectl
Cách làm git clone https://github.com/hoangmnsd/kubernetes-series cd kubernetes-series/efk-stack 1. Tạo cluster 1.1. eks trên eks phải tạo cluster bằng file này cluster-efk.yaml
có thể đổi tên cluster, tạo thêm node, đổi type của node trong file đó, nhưng nên chọn 1 node có 4vCPU, &amp;gt;8GB (t2.xlarge), đã test trường hợp sử dụng t2.large (2 vCPU, 8 GB Mem) cũng ok
eksctl create cluster -f cluster-efk.</description>
    </item>
    
    <item>
      <title>K8S 6: Using Postgresql Run Outside Cluster (in Another Host Ec2)</title>
      <link>https://hoangmnsd.github.io/posts/k8s-vi-using-postgres-run-outside-cluster-in-another-host-ec2/</link>
      <pubDate>Thu, 21 Nov 2019 10:39:03 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-vi-using-postgres-run-outside-cluster-in-another-host-ec2/</guid>
      <description>If you delete the database pod all data is lost. We&amp;rsquo;ll fix this by using a database that lives externally to our cluster.
 Yêu cầu Workplace: Amazon EC2 Linux
Đã tạo môi trường, cluster của riêng bạn, có thể dùng eksctl tạo từ file cluster.yaml sau
apiVersion: eksctl.io/v1alpha5 kind: ClusterConfig metadata: name: base-project region: us-east-1 availabilityZones: [&amp;quot;us-east-1a&amp;quot;, &amp;quot;us-east-1d&amp;quot;] nodeGroups: - name: nodegrp-1 instanceType: t2.medium desiredCapacity: 1 ssh: # import public key from file publicKeyPath: /home/ec2-user/.</description>
    </item>
    
    <item>
      <title>K8S 5: Using Helm Chart With Kubectl</title>
      <link>https://hoangmnsd.github.io/posts/k8s-v-using-helm-chart-w-kubectl/</link>
      <pubDate>Tue, 19 Nov 2019 17:25:05 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-v-using-helm-chart-w-kubectl/</guid>
      <description>Giới thiệu Trước khi dùng helm, mình đã dùng kubectl để run app này ok:
https://github.com/hoangmnsd/kubernetes-series/tree/master/spring-maven-postgres-docker-k8s
tuy nhiên việc chạy riêng từng command kubectl apply -f … và việc quản lý version tập trung của kubectl bất tiện đã dẫn đến việc cần dùng Helm để quản lý kubernetes cluster
Vậy nên giờ mình sẽ cấu trúc lại folder https://github.com/hoangmnsd/kubernetes-series/tree/master/spring-maven-postgres-docker-k8s để sử dụng được Helm,
Sau khi cấu trúc lại thì kết quả cuối cùng là project này https://github.</description>
    </item>
    
    <item>
      <title>K8S 4: App Micro Services on AWS with eksctl</title>
      <link>https://hoangmnsd.github.io/posts/k8s-iv-app-micro-services-on-aws-w-eksctl/</link>
      <pubDate>Fri, 15 Nov 2019 17:09:22 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-iv-app-micro-services-on-aws-w-eksctl/</guid>
      <description>Run Spring Boot + Postgresql App by Docker Compose/Kubernetes Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>K8S 3: Using eksctl on Amazon Linux EC2</title>
      <link>https://hoangmnsd.github.io/posts/k8s-iii-using-eksctl-on-amazon-linux/</link>
      <pubDate>Thu, 14 Nov 2019 17:16:22 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-iii-using-eksctl-on-amazon-linux/</guid>
      <description>Giới thiệu Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>K8S 2: How to Access K8s Dashboard On Aws Ec2 Ubuntu</title>
      <link>https://hoangmnsd.github.io/posts/k8s-ii-how-to-access-dashboard-on-aws-ec2-ubuntu/</link>
      <pubDate>Tue, 12 Nov 2019 00:15:50 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-ii-how-to-access-dashboard-on-aws-ec2-ubuntu/</guid>
      <description>Giới thiệu Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>K8S 1: App Micro Services on AWS with Minikube</title>
      <link>https://hoangmnsd.github.io/posts/k8s-i-app-micro-services-on-aws-w-minikube/</link>
      <pubDate>Fri, 11 Oct 2019 15:14:01 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-i-app-micro-services-on-aws-w-minikube/</guid>
      <description>Giới thiệu Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>Send Message to Discord/Slack Using Aws Lambda</title>
      <link>https://hoangmnsd.github.io/posts/send-message-to-discord-slack-using-aws-lambda/</link>
      <pubDate>Wed, 04 Sep 2019 11:50:02 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/send-message-to-discord-slack-using-aws-lambda/</guid>
      <description>Bài này hướng dẫn tạo 1 function lambda start EC2 và gửi message về Discord/Slack.
Ngoài ra, dựa vào đó, các bạn có thể setting Cloudwatch rule để trigger Lambda function theo 1 Schedule mong muốn.
I. Discord 1. Yêu cầu Đang sử dụng hệ điều hành Window (MacOS cũng được, nhưng các bạn sẽ cần hiểu dc chỗ nào nên làm theo/ko làm theo)
2. Cách làm 2.1. Tạo bot trên discord Vào discord tạo server &amp;ldquo;Test&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Using Packer &#43; Ansible to Create Image</title>
      <link>https://hoangmnsd.github.io/posts/using-packer-ansible-to-create-image/</link>
      <pubDate>Thu, 15 Aug 2019 16:48:35 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/using-packer-ansible-to-create-image/</guid>
      <description>Yêu cầu Giả định là bạn đã có 1 tài khoản AWS rồi, có thể tạo được EC2
Có base kiến thức cơ bản về AWS, Linux biết cách SSH vào EC2
Cách làm 1. Tạo bộ AWS key cho Packer user Vào AWS IAM tạo user &amp;ldquo;packer&amp;rdquo; (hoặc bất cứ tên gì, ở đây mình lấy ảnh cũ chọn user &amp;ldquo;ansible&amp;rdquo;) cấp policy phù hợp (ví dụ chọn AdministratorAccess).</description>
    </item>
    
    <item>
      <title>Secure API Gateway by Lambda Authorizer</title>
      <link>https://hoangmnsd.github.io/posts/secure-api-gateway-by-lambda-authorizer/</link>
      <pubDate>Mon, 29 Jul 2019 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/secure-api-gateway-by-lambda-authorizer/</guid>
      <description>Bài này sẽ giải thích cách Secure API Gateway bằng Lambda Authorizer đơn giản.
Nếu API không được secure thì bất cứ ai có API URL cũng có thể gửi request đến server và lấy được data trong DynamoDB của mình.
Nên cần phải setup Authorization cho API Gateway.
1. Tạo table trong DynamoDB Table name: authors
Primary key: id
Tạo vài item trong table authors
{ &amp;#34;firstName&amp;#34;: &amp;#34;Hoang&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;le-hoang&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;Le&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;linoel-messi&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;lionel&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;messi&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;jonesta-smaldini&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;jonesta&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;smaldini&amp;#34; }, { &amp;#34;firstName&amp;#34;: &amp;#34;Fred&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;fred&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;the-red&amp;#34; } 2.</description>
    </item>
    
    <item>
      <title>Ansible Demo Ansible Pull Galaxy Playbook</title>
      <link>https://hoangmnsd.github.io/posts/ansible-demo-ansible-pull-galaxy-playbook/</link>
      <pubDate>Wed, 03 Jul 2019 09:18:32 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/ansible-demo-ansible-pull-galaxy-playbook/</guid>
      <description>Demo về cách sử dụng Ansible
Yêu cầu Đã setup Ansible để master và client có thể connect được với nhau theo cách Dynamic Inventory trong link sau: Setup Ansible Dynamic Inventory Aws
Cách làm 1. Change owner of /etc/ansilbe cd /etc/ansible sudo chown -R ec2-user:ec2-user . 2. Tạo playbook define các role /etc/ansible/lamp.yml cd /etc/ansible nano /etc/ansible/lamp.yml Nội dung file /etc/ansible/lamp.yml như sau:
--- - hosts: all become: yes roles: - apache - php Ctr+X rồi Yes-Enter để save file</description>
    </item>
    
    <item>
      <title>Setup Ansible Dynamic Inventory Aws</title>
      <link>https://hoangmnsd.github.io/posts/setup-ansible-dynamic-inventory-aws/</link>
      <pubDate>Tue, 02 Jul 2019 22:33:24 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/setup-ansible-dynamic-inventory-aws/</guid>
      <description>Khi setup Ansible thì có 2 cách, 1 là dùng &amp;ldquo;Static inventory&amp;rdquo;, 2 là &amp;ldquo;Dynamic inventory&amp;rdquo;
Trên AWS thì nên sử dụng cách 2, đây là best practice của Ansible.
Bài này sẽ tập trung nói về cách 2, phần cuối sẽ nói về cách 1 (Cách 1 setup sẽ dễ hơn nhiều)
Yêu cầu Giả định là bạn đã có 1 tài khoản AWS rồi, có thể tạo được EC2</description>
    </item>
    
    <item>
      <title>Áp Dụng CircleCI Vào Github Blog</title>
      <link>https://hoangmnsd.github.io/posts/using-circleci-in-github-blog/</link>
      <pubDate>Mon, 24 Jun 2019 11:11:35 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/using-circleci-in-github-blog/</guid>
      <description>Yêu cầu Giả định là bạn đã có 1 Github Blog rồi, có thể tạo theo link sau:
Create a Gihub Blog by Hugo
Và bạn đã tạo trên github 2 repo là: username và username.github.io
Trong đó thì username là repo mà mình sẽ làm việc (viết post mới, sửa chức năng v..v)
Còn username.github.io là repo sẽ dc tự động generate ra code và phản ánh nội dung trang web trên đường link https://username.</description>
    </item>
    
    <item>
      <title>Tạo 1 Blog trên Github bằng Hugo</title>
      <link>https://hoangmnsd.github.io/posts/create-a-github-blog-by-hugo/</link>
      <pubDate>Tue, 18 Jun 2019 15:03:08 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/create-a-github-blog-by-hugo/</guid>
      <description>Blog sẽ có dạng https://username.github.io/. Giả định là bạn đang dùng Windows, đã cài đặt Git Bash
1. Install Hugo bằng file exe cho Windows Về version của Hugo thì nên chọn version 0.55.6
Install trên Windows nên làm như link sau: https://discourse.gohugo.io/t/howto-install-hugo-on-windows/741
vào link sau: https://github.com/gohugoio/hugo/releases/tag/v0.55.6
download file hugo_0.55.6_Windows-64bit.zip về thư mục tùy ý, chẳng hạn &amp;ldquo;E:\Downloads&amp;quot;
giải nén ra sẽ có file hugo.exe
giả sử file hugo.exe trong đường dẫn sau: E:\Downloads\hugo_0.</description>
    </item>
    
  </channel>
</rss>
