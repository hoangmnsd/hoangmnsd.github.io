<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on Hoang</title>
    <link>https://hoangmnsd.github.io/tags/aws/</link>
    <description>Recent content in AWS on Hoang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 11 Apr 2022 14:13:16 +0700</lastBuildDate><atom:link href="https://hoangmnsd.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple Demo: Data transfer between Raspberry Pi and AWS IoT Core</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-simple-demo-data-transfer-between-raspberry-and-aws-iotcore/</link>
      <pubDate>Mon, 11 Apr 2022 14:13:16 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-simple-demo-data-transfer-between-raspberry-and-aws-iotcore/</guid>
      <description>1. Cách làm 1.1. Trên AWS IoT Core, tạo things Go to Manage -&amp;gt; Thing -&amp;gt; Create single thing
Note to select Auto-generate a new certificate (Recommended)
Download all 5 files (Certificate and Key)
Đổi tên các file đó cho dễ nhớ, rồi dùng WinSCP để transfer 5 file đó lên RPi của bạn
1.2. Trên AWS IoT Core, tạo policy Goto Secure -&amp;gt; Policies -&amp;gt; Create Policy
điền như hình sau:</description>
    </item>
    
    <item>
      <title>Secure API Gateway by AWS Cognito User Pool (in ReactJS based Gatsby App)</title>
      <link>https://hoangmnsd.github.io/posts/secure-api-gateway-by-cognito-user-pool-gatsbyjs/</link>
      <pubDate>Sat, 31 Jul 2021 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/secure-api-gateway-by-cognito-user-pool-gatsbyjs/</guid>
      <description>Giới thiệu Bài này giải thích về cách secure API Gateway enpoint bằng cách dùng Cognito User Pool Authorizer.
Frontend trong bài này sử dụng Reacjs nhé.
API Gateway của AWS thì có 2 loại chia theo protocol: HTTP API và REST API (Bài này nói về REST API).
Yêu cầu Các bạn cần có base kiến thức về ReactJS 1 chút, biết làm thế nào để viết 1 component, export nó ra như nào, làm sao để apply authenticate vào Gatsby, cách viết 1 component, create pages, pass props qua các page, export page &amp;hellip;</description>
    </item>
    
    <item>
      <title>Integrate AWS Cognito to Gatsby Website</title>
      <link>https://hoangmnsd.github.io/posts/integrate-aws-cognito-to-gatsby-website/</link>
      <pubDate>Sun, 25 Jul 2021 16:40:11 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/integrate-aws-cognito-to-gatsby-website/</guid>
      <description>1. Giới thiệu Gần đây khi tìm hiểu về frontend thì mình biết rằng Hugo không thể cung cấp tính năng Authenticate cho website của mình. Vì bản thân Hugo là 1 Static Site Generator (SSG), nó ko có trách nhiệm biến website của bạn thành dynamic.
Tiếp tục tìm hiểu thì mình biết thêm về GatsbyJS, cũng là 1 Static Site Generator, nhưng nó based trên ReactJS và có nhiều plugin để biến trang web thành dynamic.</description>
    </item>
    
    <item>
      <title>Lambda &#43; API Gateway, Telegram Bot and Serverless Webapp</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-lambda-apigw-telegram-bot-serverless-webapp/</link>
      <pubDate>Wed, 10 Mar 2021 00:43:59 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-lambda-apigw-telegram-bot-serverless-webapp/</guid>
      <description>Phần 1 mình sẽ nói về cách để tạo 1 Serverless Telegram bot dùng Lambda + API Gateway
Phần 2 mình sẽ nói về cách để trigger Lambda từ 1 Web Browser host trên S3 bucket dùng Ajax Jquery (cũng cần có API Gateway)
1. Sererless Telegram Bot using Lambda + API Gateway 1.1. Tạo Bot bằng cách chat với @BotFather Đăng nhập vào Telegram, tìm @BotFather và chat với nó để tạo bot của bạn.</description>
    </item>
    
    <item>
      <title>K8S 3: Using eksctl on Amazon Linux EC2</title>
      <link>https://hoangmnsd.github.io/posts/k8s-iii-using-eksctl-on-amazon-linux/</link>
      <pubDate>Thu, 14 Nov 2019 17:16:22 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-iii-using-eksctl-on-amazon-linux/</guid>
      <description>Giới thiệu Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>K8S 2: How to Access K8s Dashboard On Aws Ec2 Ubuntu</title>
      <link>https://hoangmnsd.github.io/posts/k8s-ii-how-to-access-dashboard-on-aws-ec2-ubuntu/</link>
      <pubDate>Tue, 12 Nov 2019 00:15:50 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-ii-how-to-access-dashboard-on-aws-ec2-ubuntu/</guid>
      <description>Giới thiệu Để vọc Kubernetes trên AWS, có nhiều cách:
cách 1 là dùng Service EKS của AWS, làm việc trên Console luôn, rất trực quan
cách 2 là dùng eksctl là CLI của AWS phát triển, nhiệm vụ tương tự như Service EKS, nhưng ta làm việc với nó trên CLI/terminal
cách 3 là tạo 1 EC2 Ubuntu 18.04 LTS (t2.medium trở lên), cài minikube lên nó, dựng 1 cluster</description>
    </item>
    
    <item>
      <title>Aws Certified Sysops Administrator Associate Note (SOA)</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-aws-certified-sysops-administrator-associate-note-soa/</link>
      <pubDate>Sat, 07 Sep 2019 23:01:48 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-aws-certified-sysops-administrator-associate-note-soa/</guid>
      <description>Các câu hỏi và câu trả lời được note lại trong quá trình học &amp;mdash;P1&amp;mdash;  Q. Cty của bạn có 1 VPC với vài ec2. App trên ec2 làm việc với IPv6. Cần ensure là ec2 này có thể init traffic ra Internet, nhưng ko cho connect từ internet vào instance. Làm nào?
 Dùng egress-only Internet gateway.
ko dùng NAT GW hay NAT instance vì cái đó dùng cho IP v4, IGW thì hiển nhiên ko dùng rồi.</description>
    </item>
    
    <item>
      <title>Send Message to Discord/Slack Using Aws Lambda</title>
      <link>https://hoangmnsd.github.io/posts/send-message-to-discord-slack-using-aws-lambda/</link>
      <pubDate>Wed, 04 Sep 2019 11:50:02 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/send-message-to-discord-slack-using-aws-lambda/</guid>
      <description>Bài này hướng dẫn tạo 1 function lambda start EC2 và gửi message về Discord/Slack.
Ngoài ra, dựa vào đó, các bạn có thể setting Cloudwatch rule để trigger Lambda function theo 1 Schedule mong muốn.
I. Discord 1. Yêu cầu Đang sử dụng hệ điều hành Window (MacOS cũng được, nhưng các bạn sẽ cần hiểu dc chỗ nào nên làm theo/ko làm theo)
2. Cách làm 2.1. Tạo bot trên discord Vào discord tạo server &amp;ldquo;Test&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Aws Lambda get Current Date Time Wrong</title>
      <link>https://hoangmnsd.github.io/posts/aws-lambda-get-current-date-time-wrong/</link>
      <pubDate>Tue, 27 Aug 2019 17:34:21 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/aws-lambda-get-current-date-time-wrong/</guid>
      <description>1. Mô tả Chia sẻ về 1 lỗi khi sử dụng AWS Lambda:
Mình dùng Lambda để get current timestamp, lambda này được trigger bởi Cloudwatch cứ 5 giây chạy 1 lần.
Mình phát hiện ra là lần đầu thì Lambda return kết quả đúng 2019-08-27 08:46:54.867900.
Nhưng sau đó 5 giây vào check log trong Cloudwatch thì thấy vẫn trả về timestamp cũ 2019-08-27 08:46:54.867900.
Cứ thế, dù 5 10 15 phút sau mình cứ chạy lại là log trả về timestamp cũ.</description>
    </item>
    
    <item>
      <title>Using Packer &#43; Ansible to Create Image</title>
      <link>https://hoangmnsd.github.io/posts/using-packer-ansible-to-create-image/</link>
      <pubDate>Thu, 15 Aug 2019 16:48:35 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/using-packer-ansible-to-create-image/</guid>
      <description>Yêu cầu Giả định là bạn đã có 1 tài khoản AWS rồi, có thể tạo được EC2
Có base kiến thức cơ bản về AWS, Linux biết cách SSH vào EC2
Cách làm 1. Tạo bộ AWS key cho Packer user Vào AWS IAM tạo user &amp;ldquo;packer&amp;rdquo; (hoặc bất cứ tên gì, ở đây mình lấy ảnh cũ chọn user &amp;ldquo;ansible&amp;rdquo;) cấp policy phù hợp (ví dụ chọn AdministratorAccess).</description>
    </item>
    
    <item>
      <title>Aws Certified Solution Architect Associate Note (SAA)</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-aws-certified-solution-architect-associate-note-saa/</link>
      <pubDate>Tue, 06 Aug 2019 00:29:51 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-aws-certified-solution-architect-associate-note-saa/</guid>
      <description>Các câu hỏi và câu trả lời được note lại trong quá trình học &amp;mdash;P1&amp;mdash;
 Q. 1 cty cần migrate 10TB data lên aws. Yêu cầu replica lag &amp;lt; 100 miliseconds, data có thể scale gấp 4? dùng cái RDS nào của amazon?
 aurora, có thể scale 64TB và keep replica lag dưới 100 milisec
 Q. &amp;ldquo;IOPS” stands for input/output operations per second=số lần đọc/ghi max trong 1 giây, &amp;ldquo;throughput&amp;rdquo; là dung lượng traffic 1 giây</description>
    </item>
    
    <item>
      <title>Secure API Gateway by Lambda Authorizer</title>
      <link>https://hoangmnsd.github.io/posts/secure-api-gateway-by-lambda-authorizer/</link>
      <pubDate>Mon, 29 Jul 2019 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/secure-api-gateway-by-lambda-authorizer/</guid>
      <description>Bài này sẽ giải thích cách Secure API Gateway bằng Lambda Authorizer đơn giản.
Nếu API không được secure thì bất cứ ai có API URL cũng có thể gửi request đến server và lấy được data trong DynamoDB của mình.
Nên cần phải setup Authorization cho API Gateway.
1. Tạo table trong DynamoDB Table name: authors
Primary key: id
Tạo vài item trong table authors
{ &amp;#34;firstName&amp;#34;: &amp;#34;Hoang&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;le-hoang&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;Le&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;linoel-messi&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;lionel&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;messi&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;jonesta-smaldini&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;jonesta&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;smaldini&amp;#34; }, { &amp;#34;firstName&amp;#34;: &amp;#34;Fred&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;fred&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;the-red&amp;#34; } 2.</description>
    </item>
    
    <item>
      <title>Aws Certified Developer Associate Note (CDA)</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-aws-certified-developer-associate-note-cda/</link>
      <pubDate>Tue, 23 Jul 2019 09:09:48 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-aws-certified-developer-associate-note-cda/</guid>
      <description>Các câu hỏi và câu trả lời được note lại trong quá trình học &amp;mdash;P1&amp;mdash;
 Q. 1 app đang stores session state in memory. Nên lưu nó ở đâu?
 Store session state in an ElastiCache cluster
 Q. 1 app cần phải monitor các event. cần capture số lượng user login, thời gian đỉnh điểm, period 10s. làm nào?
 Create a high-resolution custom Amazon CloudWatch metric
high-resolution metric: can specify a high-resolution alarm with a period of 10 seconds or 30 seconds, regular alarm with a period of any multiple of 60 seconds</description>
    </item>
    
  </channel>
</rss>
