<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gitlab on Hoang</title>
    <link>https://hoangmnsd.github.io/tags/gitlab/</link>
    <description>Recent content in Gitlab on Hoang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 01 Nov 2021 21:16:47 +0700</lastBuildDate><atom:link href="https://hoangmnsd.github.io/tags/gitlab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitOps: Playaround with ArgoCD and private Gitlab CI, ACR</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-playaround-w-argocd-and-private-gitlab-ci-acr/</link>
      <pubDate>Mon, 01 Nov 2021 21:16:47 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-playaround-w-argocd-and-private-gitlab-ci-acr/</guid>
      <description>1. Intro Demo about ArgoCD with private Gitlab CI repository, private ACR 2. Prerequisites  Basic knowledge about Azure, ssh-keygen, K8S, Gitlab, Docker commands Workspace: run commands on Azure Cloudshell Prepare an AKS cluster (Standard_DS2_v2, kubernetes version 1.21.2) Prepare an ACR (Azure container registry) with credential  export ACR_SERVER=&amp;#34;YOUR_ACR_NAME.azurecr.io&amp;#34; export ACR_USER=&amp;#34;YOUR_ACR_USER_NAME&amp;#34; export ACR_PASSWORD=&amp;#34;YOUR_ACR_PASSWORD&amp;#34; Clone 2 projects to your workspace:
 https://gitlab.com/argocd-demo2801/gitops-chart https://gitlab.com/argocd-demo2801/webapp  3. Setup 3.1. Config on Webapp repository https://gitlab.</description>
    </item>
    
    <item>
      <title>K8S 14: (on GKE Cluster) Setup Sonarqube for Maven Project With GitlabCI</title>
      <link>https://hoangmnsd.github.io/posts/k8s-xiv-on-gke-cluster-setup-sonarqube-for-maven-project-with-gitlabci/</link>
      <pubDate>Sat, 08 Aug 2020 01:18:27 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-xiv-on-gke-cluster-setup-sonarqube-for-maven-project-with-gitlabci/</guid>
      <description>Giới thiệu Tưởng tượng rằng bạn đã có:
 GKE Cluster, dựng Gitlab Runner, Gitlab self-hosted (hoặc dùng gitlab.com). 1 java project (dùng Maven) trên Gitlab. Bạn muốn sử dụng Gitlab CI để tạo pipeline.  Bài này hướng dẫn cách setup 1 server Sonarqube để scan quality code cho 1 Java (Spring) project.
Kết thúc bài này sẽ có 1 flow kiểu như sau, project Java của bạn mỗi khi có 1 commit trên Gitlab sẽ:</description>
    </item>
    
    <item>
      <title>K8S 13: Using Gitlab CI on GKE Cluster - Push Docker Image to GCR for Continuous Integration (CI)</title>
      <link>https://hoangmnsd.github.io/posts/k8s-xiii-using-gitlab-ci-push-docker-image-to-gcr-on-gke/</link>
      <pubDate>Fri, 29 May 2020 23:44:53 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-xiii-using-gitlab-ci-push-docker-image-to-gcr-on-gke/</guid>
      <description>Giới thiệu Các bài trước thì mình đã nói đến CD (Continuous Deployment) rồi, giờ chuyển sang CI (Continuous Integration)
Nhắc đến tool về CI thì có nhiều, ví dụ như Jenkins, Travis CI, Circle CI, Gitlab CI,&amp;hellip; etc.
Hôm nay mình sẽ giới thiệu về Gitlab CI
Mục đích của tutorial này là:
Setup 1 project sample để có thể sử dụng Gitlab CI, push Docker image lên Google Container Registry (GCR).</description>
    </item>
    
    <item>
      <title>K8S 12: GitOps - Using Flux with private Gitlab server and GCR for Continuous Deployment (CD) on GKE Cluster</title>
      <link>https://hoangmnsd.github.io/posts/k8s-xii-gitops-using-flux-with-private-gitlab-server-with-gcr-for-cd/</link>
      <pubDate>Fri, 22 May 2020 22:55:35 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-xii-gitops-using-flux-with-private-gitlab-server-with-gcr-for-cd/</guid>
      <description>Giới thiệu Lần mò về GitOps thì thấy đây là 1 khái niệm rất hay và thú vị
Như các bạn thấy trên hình, Flux hoạt động như 1 operator sẽ đi scan 1 Git repository và 1 (hoặc nhiều) Docker registries.
Mỗi khi bạn commit 1 file yaml lên Git repository đó, Flux sẽ tự động deploy file đó vào k8s (Đây chính là GitOps). Nếu bạn thay đổi nội dung file yaml đó và commit tiếp, Flux cũng sẽ update resources tương ứng.</description>
    </item>
    
    <item>
      <title>K8S 10: Setup Gitlab Self Hosted on GKE Cluster</title>
      <link>https://hoangmnsd.github.io/posts/k8s-x-setup-gitlab-on-gke-cluster/</link>
      <pubDate>Thu, 20 Feb 2020 12:28:58 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-x-setup-gitlab-on-gke-cluster/</guid>
      <description>Tạo Gitlab với yêu cầu là:
 disable MinIO, dùng GCS, disable cert-manager, dùng cert-manager mình tự tạo riêng, các config về resource của gitlab ở mức minimal, gitlab sẽ vào qua link gitlab.your-subdomain.your-domain.net và có HTTPS  Yêu Cầu  Đã tạo GKE Cluster có ít nhất là 3 vCPU Đã install Helm 2 Đã làm theo bài này để setup cert-manager:
K8S 9: Setup External DNS + Cert Manager + Nginx Ingress Controller Wilcard  Cách Làm 1.</description>
    </item>
    
  </channel>
</rss>
