<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grafana on Hoang</title>
    <link>https://hoangmnsd.github.io/tags/grafana/</link>
    <description>Recent content in Grafana on Hoang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 01 Aug 2025 21:50:50 +0700</lastBuildDate><atom:link href="https://hoangmnsd.github.io/tags/grafana/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setup LGTM stack &#43; Open Telemetry</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-setup-lgtm-stack-with-open-telemetry/</link>
      <pubDate>Fri, 01 Aug 2025 21:50:50 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-setup-lgtm-stack-with-open-telemetry/</guid>
      <description>1. Story Gần đây mình quan tâm đến chủ đề Logging Tracing Monitoring
Phát hiện 1 stack công nghệ khá hay dành riêng cho chủ đề trên là LGTM.
Trong project này mình sẽ dùng Docker Compose để build 1 stack LGTM.
Rồi cung cấp sample code để 1 Python application có thể sử dụng LGTM.
Source code: https://gitlab.com/inmessionante/lgtm-lab.git
2. LGTM Stack là gì? Loki + Grafana + Tempo + ProMetheus</description>
    </item>
    
    <item>
      <title>Azure Monitor Alert and Grafana Alert</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-compare-azure-monitor-alert-grafana-alert/</link>
      <pubDate>Mon, 14 Jul 2025 11:04:14 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-compare-azure-monitor-alert-grafana-alert/</guid>
      <description>Bài toán đặt ra App generate log mỗi 1 phút 1 lần với customDimensions.service_name == &amp;ldquo;billing&amp;rdquo;.
Cần tạo Alert query KQL dựa trên customDimensions.service_name là billing.
run evaluation mỗi 1 phút, lấy top 3 lần gần nhất,
Check nếu value của query lớn hơn 11, 3 lần liên tục thì Alert về email.
nếu giữa các lần chạy schedule mà có log do manual run (liên tục trong 1 phút chẳng hạn), thì Alert query sẽ bị sai.</description>
    </item>
    
    <item>
      <title>Ship Log to Grafana Loki using Promtail</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-ship-log-to-grafana-loki-use-promtail/</link>
      <pubDate>Thu, 02 Jan 2025 00:07:17 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-ship-log-to-grafana-loki-use-promtail/</guid>
      <description>Story Câu chuyện là mình có 1 app chạy trên AWS Lambda. Hàng ngày throw log ra AWS Cloudwatch Log.
Mình có nhu cầu query log để marketing, thế nên thường xuyên dùng chức năng Log Insight của Cloudwatch.
Tuy nhiên thì giá của Log Insight khá là căng. Họ sẽ free 5GB query đầu tiên, sau đó tính phí:
 First 5GB per month of log data scanned by CloudWatch Logs Insights queries is free.</description>
    </item>
    
    <item>
      <title>Grafana Loki and Promtail for Log Aggregation (Logging)</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-docker-loki-grafana-promtail-for-logging/</link>
      <pubDate>Fri, 14 Apr 2023 22:49:25 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-docker-loki-grafana-promtail-for-logging/</guid>
      <description>Khi bạn phải quản lý log trên nhiều VM khác nhau, thậm chí là quản lý cả log trong các docker container chạy trên các VM đó, thì việc theo dõi log sẽ gặp nhiều khó khăn. Chẳng lẽ cứ SSH vào từng VM rồi tail từng file hay sao?
Điều này dẫn đến các giải pháp logging (log aggregation) ra đời: ELK, EFK, nay mình giới thiệu 1 trending tool là Loki của Grafana</description>
    </item>
    
    <item>
      <title>K8S 15: (on GKE Cluster) Setup Prometheus &#43; Grafana Operator by Helm</title>
      <link>https://hoangmnsd.github.io/posts/k8s-xv-on-gke-cluster-setup-prometheus-grafana-operator-by-helm/</link>
      <pubDate>Sat, 19 Sep 2020 16:05:40 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/k8s-xv-on-gke-cluster-setup-prometheus-grafana-operator-by-helm/</guid>
      <description>Làm theo bài K8S 9 để setup TLS DNS Cert Manager, cùng với đó setup 1 Java Maven App xong đã.
Bài K8S 9 sẽ cần set các biến như sau:
export PROJECT_ID=&amp;#34;your-project-id&amp;#34; export DOMAIN=&amp;#34;your-domain.net&amp;#34; export SUBDOMAIN=&amp;#34;your-subdomain.your-domain.net&amp;#34; export YOUR_EMAIL_ADDRESS=&amp;#34;your-email@gmail.com&amp;#34; # Cloud DNS service account nên là unique để tránh lỗi khi issue Certificate, nên mình cho thêm hậu tố `date` vào như sau:  export CLOUD_DNS_SA=&amp;#34;certmng-cdns-$(date +%d%m%Y-%H)&amp;#34; export SPRINGAPP_SUBDOMAIN=&amp;#34;springapp.your-subdomain.your-domain.net&amp;#34; export CLUSTER_NAME=&amp;#34;your-cluster-name&amp;#34; export TLS_SECRET_NAME=&amp;#34;echo-tls-secret-prod&amp;#34; kubectl annotate service nginx-ingress-controller &amp;#34;external-dns.</description>
    </item>
    
  </channel>
</rss>
