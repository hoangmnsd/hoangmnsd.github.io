<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lambda on Hoang</title>
    <link>https://hoangmnsd.github.io/tags/lambda/</link>
    <description>Recent content in Lambda on Hoang</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 28 Mar 2025 21:46:36 +0700</lastBuildDate><atom:link href="https://hoangmnsd.github.io/tags/lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Lambda Development with SAM</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-aws-lambda-development-sam/</link>
      <pubDate>Fri, 28 Mar 2025 21:46:36 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-aws-lambda-development-sam/</guid>
      <description>repo: https://gitlab.com/inmessionante/test-lambda-local-develop-lab.git
1. Overview Nói về 2 method để làm việc với AWS Lambda từ môi trường local
 Method 1: Using sam-cli type zip Method 2: Using sam-cli type docker image    Method 1 thường dùng cho các ứng dụng vừa và nhỏ, vì có giới hạn của zip file là 250MB (Kể cả có áp dụng Layer). ưu điểm là khi deploy lên AWS Lambda, bạn có thể vào nhìn và chỉnh sửa trực tiếp luôn bằng Browser IDE luôn.</description>
    </item>
    
    <item>
      <title>Lambda &#43; API Gateway, Telegram Bot and Serverless Webapp</title>
      <link>https://hoangmnsd.github.io/posts/encrypt-lambda-apigw-telegram-bot-serverless-webapp/</link>
      <pubDate>Wed, 10 Mar 2021 00:43:59 +0700</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/encrypt-lambda-apigw-telegram-bot-serverless-webapp/</guid>
      <description>Phần 1 mình sẽ nói về cách để tạo 1 Serverless Telegram bot dùng Lambda + API Gateway
Phần 2 mình sẽ nói về cách để trigger Lambda từ 1 Web Browser host trên S3 bucket dùng Ajax Jquery (cũng cần có API Gateway)
1. Sererless Telegram Bot using Lambda + API Gateway 1.1. Tạo Bot bằng cách chat với @BotFather Đăng nhập vào Telegram, tìm @BotFather và chat với nó để tạo bot của bạn.</description>
    </item>
    
    <item>
      <title>Send Message to Discord/Slack Using Aws Lambda</title>
      <link>https://hoangmnsd.github.io/posts/send-message-to-discord-slack-using-aws-lambda/</link>
      <pubDate>Wed, 04 Sep 2019 11:50:02 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/send-message-to-discord-slack-using-aws-lambda/</guid>
      <description>Bài này hướng dẫn tạo 1 function lambda start EC2 và gửi message về Discord/Slack.
Ngoài ra, dựa vào đó, các bạn có thể setting Cloudwatch rule để trigger Lambda function theo 1 Schedule mong muốn.
I. Discord 1. Yêu cầu Đang sử dụng hệ điều hành Window (MacOS cũng được, nhưng các bạn sẽ cần hiểu dc chỗ nào nên làm theo/ko làm theo)
2. Cách làm 2.1. Tạo bot trên discord Vào discord tạo server &amp;ldquo;Test&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Aws Lambda get Current Date Time Wrong</title>
      <link>https://hoangmnsd.github.io/posts/aws-lambda-get-current-date-time-wrong/</link>
      <pubDate>Tue, 27 Aug 2019 17:34:21 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/aws-lambda-get-current-date-time-wrong/</guid>
      <description>1. Mô tả Chia sẻ về 1 lỗi khi sử dụng AWS Lambda:
Mình dùng Lambda để get current timestamp, lambda này được trigger bởi Cloudwatch cứ 5 giây chạy 1 lần.
Mình phát hiện ra là lần đầu thì Lambda return kết quả đúng 2019-08-27 08:46:54.867900.
Nhưng sau đó 5 giây vào check log trong Cloudwatch thì thấy vẫn trả về timestamp cũ 2019-08-27 08:46:54.867900.
Cứ thế, dù 5 10 15 phút sau mình cứ chạy lại là log trả về timestamp cũ.</description>
    </item>
    
    <item>
      <title>Secure API Gateway by Lambda Authorizer</title>
      <link>https://hoangmnsd.github.io/posts/secure-api-gateway-by-lambda-authorizer/</link>
      <pubDate>Mon, 29 Jul 2019 09:53:45 +0900</pubDate>
      
      <guid>https://hoangmnsd.github.io/posts/secure-api-gateway-by-lambda-authorizer/</guid>
      <description>Bài này sẽ giải thích cách Secure API Gateway bằng Lambda Authorizer đơn giản.
Nếu API không được secure thì bất cứ ai có API URL cũng có thể gửi request đến server và lấy được data trong DynamoDB của mình.
Nên cần phải setup Authorization cho API Gateway.
1. Tạo table trong DynamoDB Table name: authors
Primary key: id
Tạo vài item trong table authors
{ &amp;#34;firstName&amp;#34;: &amp;#34;Hoang&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;le-hoang&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;Le&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;linoel-messi&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;lionel&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;messi&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;jonesta-smaldini&amp;#34;, &amp;#34;firstName&amp;#34;: &amp;#34;jonesta&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;smaldini&amp;#34; }, { &amp;#34;firstName&amp;#34;: &amp;#34;Fred&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;fred&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;the-red&amp;#34; } 2.</description>
    </item>
    
  </channel>
</rss>
